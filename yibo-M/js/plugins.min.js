function hexToRgb(e) {
    var t = /^#?([a-f\d])([a-f\d])([a-f\d])$/i;
    e = e.replace(t, function(e, t, i, a) {
        return t + t + i + i + a + a;
    });
    var i = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(e);
    return i ? {
        r: parseInt(i[1], 16),
        g: parseInt(i[2], 16),
        b: parseInt(i[3], 16)
    } : null;
}

function clamp(e, t, i) {
    return Math.min(Math.max(e, t), i);
}

function isInArray(e, t) {
    return t.indexOf(e) > -1;
}! function(e) {
    "use strict";

    function t(e) {
        return RegExp("(^|\\s+)" + e + "(\\s+|$)");
    }

    function i(e, t) {
        var i = a(e, t) ? o : n;
        i(e, t);
    }
    var a, n, o;
    "classList" in document.documentElement ? (a = function(e, t) {
        return e.classList.contains(t);
    }, n = function(e, t) {
        e.classList.add(t);
    }, o = function(e, t) {
        e.classList.remove(t);
    }) : (a = function(e, i) {
        return t(i).test(e.className);
    }, n = function(e, t) {
        a(e, t) || (e.className = e.className + " " + t);
    }, o = function(e, i) {
        e.className = e.className.replace(t(i), " ");
    });
    var r = {
        hasClass: a,
        addClass: n,
        removeClass: o,
        toggleClass: i,
        has: a,
        add: n,
        remove: o,
        toggle: i
    };
    "function" == typeof define && define.amd ? define(r) : e.classie = r;
}(window),
function(e) {
    "function" == typeof define && define.amd ? define(["jquery"], e) : e("object" == typeof exports ? require("jquery") : window.jQuery || window.Zepto);
}(function(e) {
    var t, i, a, n, o, r, s = "Close",
        l = "BeforeClose",
        c = "AfterClose",
        d = "BeforeAppend",
        u = "MarkupParse",
        p = "Open",
        f = "Change",
        m = "mfp",
        v = "." + m,
        h = "mfp-ready",
        g = "mfp-removing",
        y = "mfp-prevent-close",
        b = function() {},
        x = !!window.jQuery,
        w = e(window),
        _ = function(e, i) {
            t.ev.on(m + e + v, i);
        },
        C = function(t, i, a, n) {
            var o = document.createElement("div");
            return o.className = "mfp-" + t, a && (o.innerHTML = a), n ? i && i.appendChild(o) : (o = e(o), i && o.appendTo(i)), o;
        },
        S = function(i, a) {
            t.ev.triggerHandler(m + i, a), t.st.callbacks && (i = i.charAt(0).toLowerCase() + i.slice(1), t.st.callbacks[i] && t.st.callbacks[i].apply(t, e.isArray(a) ? a : [a]));
        },
        k = function(i) {
            return i === r && t.currTemplate.closeBtn || (t.currTemplate.closeBtn = e(t.st.closeMarkup.replace("%title%", t.st.tClose)), r = i), t.currTemplate.closeBtn;
        },
        T = function() {
            e.magnificPopup.instance || (t = new b(), t.init(), e.magnificPopup.instance = t);
        },
        B = function() {
            var e = document.createElement("p").style,
                t = ["ms", "O", "Moz", "Webkit"];
            if (void 0 !== e.transition) return !0;
            for (; t.length;)
                if (t.pop() + "Transition" in e) return !0;
            return !1;
        };
    b.prototype = {
        constructor: b,
        init: function() {
            var i = navigator.appVersion;
            t.isLowIE = t.isIE8 = document.all && !document.addEventListener, t.isAndroid = /android/gi.test(i),
                t.isIOS = /iphone|ipad|ipod/gi.test(i), t.supportsTransition = B(), t.probablyMobile = t.isAndroid || t.isIOS || /(Opera Mini)|Kindle|webOS|BlackBerry|(Opera Mobi)|(Windows Phone)|IEMobile/i.test(navigator.userAgent),
                a = e(document), t.popupsCache = {};
        },
        open: function(i) {
            var n;
            if (i.isObj === !1) {
                t.items = i.items.toArray(), t.index = 0;
                var r, s = i.items;
                for (n = 0; n < s.length; n++)
                    if (r = s[n], r.parsed && (r = r.el[0]), r === i.el[0]) {
                        t.index = n;
                        break;
                    }
            } else t.items = e.isArray(i.items) ? i.items : [i.items], t.index = i.index || 0;
            if (t.isOpen) return void t.updateItemHTML();
            t.types = [], o = "", i.mainEl && i.mainEl.length ? t.ev = i.mainEl.eq(0) : t.ev = a,
                i.key ? (t.popupsCache[i.key] || (t.popupsCache[i.key] = {}), t.currTemplate = t.popupsCache[i.key]) : t.currTemplate = {},
                t.st = e.extend(!0, {}, e.magnificPopup.defaults, i), t.fixedContentPos = "auto" === t.st.fixedContentPos ? !t.probablyMobile : t.st.fixedContentPos,
                t.st.modal && (t.st.closeOnContentClick = !1, t.st.closeOnBgClick = !1, t.st.showCloseBtn = !1, t.st.enableEscapeKey = !1), t.bgOverlay || (t.bgOverlay = C("bg").on("click" + v, function() {
                    t.close();
                }), t.wrap = C("wrap").attr("tabindex", -1).on("click" + v, function(e) {
                    t._checkIfClose(e.target) && t.close();
                }), t.container = C("container", t.wrap)), t.contentContainer = C("content"), t.st.preloader && (t.preloader = C("preloader", t.container, t.st.tLoading));
            var l = e.magnificPopup.modules;
            for (n = 0; n < l.length; n++) {
                var c = l[n];
                c = c.charAt(0).toUpperCase() + c.slice(1), t["init" + c].call(t);
            }
            S("BeforeOpen"), t.st.showCloseBtn && (t.st.closeBtnInside ? (_(u, function(e, t, i, a) {
                    i.close_replaceWith = k(a.type);
                }), o += " mfp-close-btn-in") : t.wrap.append(k())), t.st.alignTop && (o += " mfp-align-top"),
                t.fixedContentPos ? t.wrap.css({
                    overflow: t.st.overflowY,
                    overflowX: "hidden",
                    overflowY: t.st.overflowY
                }) : t.wrap.css({
                    top: w.scrollTop(),
                    position: "absolute"
                }), (t.st.fixedBgPos === !1 || "auto" === t.st.fixedBgPos && !t.fixedContentPos) && t.bgOverlay.css({
                    height: a.height(),
                    position: "absolute"
                }), t.st.enableEscapeKey && a.on("keyup" + v, function(e) {
                    27 === e.keyCode && t.close();
                }), w.on("resize" + v, function() {
                    t.updateSize();
                }), t.st.closeOnContentClick || (o += " mfp-auto-cursor"), o && t.wrap.addClass(o);
            var d = t.wH = w.height(),
                f = {};
            if (t.fixedContentPos && t._hasScrollBar(d)) {
                var m = t._getScrollbarSize();
                m && (f.marginRight = m);
            }
            t.fixedContentPos && (t.isIE7 ? e("body, html").css("overflow", "hidden") : f.overflow = "hidden");
            var g = t.st.mainClass;
            return t.isIE7 && (g += " mfp-ie7"), g && t._addClassToMFP(g), t.updateItemHTML(),
                S("BuildControls"), e("html").css(f), t.bgOverlay.add(t.wrap).prependTo(t.st.prependTo || e(document.body)),
                t._lastFocusedEl = document.activeElement, setTimeout(function() {
                    t.content ? (t._addClassToMFP(h), t._setFocus()) : t.bgOverlay.addClass(h), a.on("focusin" + v, t._onFocusIn);
                }, 16), t.isOpen = !0, t.updateSize(d), S(p), i;
        },
        close: function() {
            t.isOpen && (S(l), t.isOpen = !1, t.st.removalDelay && !t.isLowIE && t.supportsTransition ? (t._addClassToMFP(g), setTimeout(function() {
                t._close();
            }, t.st.removalDelay)) : t._close());
        },
        _close: function() {
            S(s);
            var i = g + " " + h + " ";
            if (t.bgOverlay.detach(), t.wrap.detach(), t.container.empty(), t.st.mainClass && (i += t.st.mainClass + " "), t._removeClassFromMFP(i), t.fixedContentPos) {
                var n = {
                    marginRight: ""
                };
                t.isIE7 ? e("body, html").css("overflow", "") : n.overflow = "", e("html").css(n);
            }
            a.off("keyup" + v + " focusin" + v), t.ev.off(v), t.wrap.attr("class", "mfp-wrap").removeAttr("style"),
                t.bgOverlay.attr("class", "mfp-bg"), t.container.attr("class", "mfp-container"),
                t.st.showCloseBtn && (!t.st.closeBtnInside || t.currTemplate[t.currItem.type] === !0) && t.currTemplate.closeBtn && t.currTemplate.closeBtn.detach(),
                t.st.autoFocusLast && t._lastFocusedEl && e(t._lastFocusedEl).focus(), t.currItem = null,
                t.content = null, t.currTemplate = null, t.prevHeight = 0, S(c);
        },
        updateSize: function(e) {
            if (t.isIOS) {
                var i = document.documentElement.clientWidth / window.innerWidth,
                    a = window.innerHeight * i;
                t.wrap.css("height", a), t.wH = a;
            } else t.wH = e || w.height();
            t.fixedContentPos || t.wrap.css("height", t.wH), S("Resize");
        },
        updateItemHTML: function() {
            var i = t.items[t.index];
            t.contentContainer.detach(), t.content && t.content.detach(), i.parsed || (i = t.parseEl(t.index));
            var a = i.type;
            if (S("BeforeChange", [t.currItem ? t.currItem.type : "", a]), t.currItem = i, !t.currTemplate[a]) {
                var o = t.st[a] ? t.st[a].markup : !1;
                S("FirstMarkupParse", o), o ? t.currTemplate[a] = e(o) : t.currTemplate[a] = !0;
            }
            n && n !== i.type && t.container.removeClass("mfp-" + n + "-holder");
            var r = t["get" + a.charAt(0).toUpperCase() + a.slice(1)](i, t.currTemplate[a]);
            t.appendContent(r, a), i.preloaded = !0, S(f, i), n = i.type, t.container.prepend(t.contentContainer),
                S("AfterChange");
        },
        appendContent: function(e, i) {
            t.content = e, e ? t.st.showCloseBtn && t.st.closeBtnInside && t.currTemplate[i] === !0 ? t.content.find(".mfp-close").length || t.content.append(k()) : t.content = e : t.content = "",
                S(d), t.container.addClass("mfp-" + i + "-holder"), t.contentContainer.append(t.content);
        },
        parseEl: function(i) {
            var a, n = t.items[i];
            if (n.tagName ? n = {
                    el: e(n)
                } : (a = n.type, n = {
                    data: n,
                    src: n.src
                }), n.el) {
                for (var o = t.types, r = 0; r < o.length; r++)
                    if (n.el.hasClass("mfp-" + o[r])) {
                        a = o[r];
                        break;
                    }
                n.src = n.el.attr("data-mfp-src"), n.src || (n.src = n.el.attr("href"));
            }
            return n.type = a || t.st.type || "inline", n.index = i, n.parsed = !0, t.items[i] = n,
                S("ElementParse", n), t.items[i];
        },
        addGroup: function(e, i) {
            var a = function(a) {
                a.mfpEl = this, t._openClick(a, e, i);
            };
            i || (i = {});
            var n = "click.magnificPopup";
            i.mainEl = e, i.items ? (i.isObj = !0, e.off(n).on(n, a)) : (i.isObj = !1, i.delegate ? e.off(n).on(n, i.delegate, a) : (i.items = e, e.off(n).on(n, a)));
        },
        _openClick: function(i, a, n) {
            var o = void 0 !== n.midClick ? n.midClick : e.magnificPopup.defaults.midClick;
            if (o || !(2 === i.which || i.ctrlKey || i.metaKey || i.altKey || i.shiftKey)) {
                var r = void 0 !== n.disableOn ? n.disableOn : e.magnificPopup.defaults.disableOn;
                if (r)
                    if (e.isFunction(r)) {
                        if (!r.call(t)) return !0;
                    } else if (w.width() < r) return !0;
                i.type && (i.preventDefault(), t.isOpen && i.stopPropagation()), n.el = e(i.mfpEl),
                    n.delegate && (n.items = a.find(n.delegate)), t.open(n);
            }
        },
        updateStatus: function(e, a) {
            if (t.preloader) {
                i !== e && t.container.removeClass("mfp-s-" + i), !a && "loading" === e && (a = t.st.tLoading);
                var n = {
                    status: e,
                    text: a
                };
                S("UpdateStatus", n), e = n.status, a = n.text, t.preloader.html(a), t.preloader.find("a").on("click", function(e) {
                    e.stopImmediatePropagation();
                }), t.container.addClass("mfp-s-" + e), i = e;
            }
        },
        _checkIfClose: function(i) {
            if (!e(i).hasClass(y)) {
                var a = t.st.closeOnContentClick,
                    n = t.st.closeOnBgClick;
                if (a && n) return !0;
                if (!t.content || e(i).hasClass("mfp-close") || t.preloader && i === t.preloader[0]) return !0;
                if (i === t.content[0] || e.contains(t.content[0], i)) {
                    if (a) return !0;
                } else if (n && e.contains(document, i)) return !0;
                return !1;
            }
        },
        _addClassToMFP: function(e) {
            t.bgOverlay.addClass(e), t.wrap.addClass(e);
        },
        _removeClassFromMFP: function(e) {
            this.bgOverlay.removeClass(e), t.wrap.removeClass(e);
        },
        _hasScrollBar: function(e) {
            return (t.isIE7 ? a.height() : document.body.scrollHeight) > (e || w.height());
        },
        _setFocus: function() {
            (t.st.focus ? t.content.find(t.st.focus).eq(0) : t.wrap).focus();
        },
        _onFocusIn: function(i) {
            return i.target === t.wrap[0] || e.contains(t.wrap[0], i.target) ? void 0 : (t._setFocus(), !1);
        },
        _parseMarkup: function(t, i, a) {
            var n;
            a.data && (i = e.extend(a.data, i)), S(u, [t, i, a]), e.each(i, function(i, a) {
                if (void 0 === a || a === !1) return !0;
                if (n = i.split("_"), n.length > 1) {
                    var o = t.find(v + "-" + n[0]);
                    if (o.length > 0) {
                        var r = n[1];
                        "replaceWith" === r ? o[0] !== a[0] && o.replaceWith(a) : "img" === r ? o.is("img") ? o.attr("src", a) : o.replaceWith(e("<img>").attr("src", a).attr("class", o.attr("class"))) : o.attr(n[1], a);
                    }
                } else t.find(v + "-" + i).html(a);
            });
        },
        _getScrollbarSize: function() {
            if (void 0 === t.scrollbarSize) {
                var e = document.createElement("div");
                e.style.cssText = "width: 99px; height: 99px; overflow: scroll; position: absolute; top: -9999px;",
                    document.body.appendChild(e), t.scrollbarSize = e.offsetWidth - e.clientWidth, document.body.removeChild(e);
            }
            return t.scrollbarSize;
        }
    }, e.magnificPopup = {
        instance: null,
        proto: b.prototype,
        modules: [],
        open: function(t, i) {
            return T(), t = t ? e.extend(!0, {}, t) : {}, t.isObj = !0, t.index = i || 0, this.instance.open(t);
        },
        close: function() {
            return e.magnificPopup.instance && e.magnificPopup.instance.close();
        },
        registerModule: function(t, i) {
            i.options && (e.magnificPopup.defaults[t] = i.options), e.extend(this.proto, i.proto),
                this.modules.push(t);
        },
        defaults: {
            disableOn: 0,
            key: null,
            midClick: !1,
            mainClass: "",
            preloader: !0,
            focus: "",
            closeOnContentClick: !1,
            closeOnBgClick: !0,
            closeBtnInside: !0,
            showCloseBtn: !0,
            enableEscapeKey: !0,
            modal: !1,
            alignTop: !1,
            removalDelay: 0,
            prependTo: null,
            fixedContentPos: "auto",
            fixedBgPos: "auto",
            overflowY: "auto",
            closeMarkup: '<button title="%title%" type="button" class="mfp-close">&#215;</button>',
            tClose: "Close (Esc)",
            tLoading: "Loading...",
            autoFocusLast: !0
        }
    }, e.fn.magnificPopup = function(i) {
        T();
        var a = e(this);
        if ("string" == typeof i)
            if ("open" === i) {
                var n, o = x ? a.data("magnificPopup") : a[0].magnificPopup,
                    r = parseInt(arguments[1], 10) || 0;
                o.items ? n = o.items[r] : (n = a, o.delegate && (n = n.find(o.delegate)), n = n.eq(r)),
                    t._openClick({
                        mfpEl: n
                    }, a, o);
            } else t.isOpen && t[i].apply(t, Array.prototype.slice.call(arguments, 1));
        else i = e.extend(!0, {}, i),
            x ? a.data("magnificPopup", i) : a[0].magnificPopup = i, t.addGroup(a, i);
        return a;
    };
    var M, I, O, A = "inline",
        E = function() {
            O && (I.after(O.addClass(M)).detach(), O = null);
        };
    e.magnificPopup.registerModule(A, {
        options: {
            hiddenClass: "hide",
            markup: "",
            tNotFound: "Content not found"
        },
        proto: {
            initInline: function() {
                t.types.push(A), _(s + "." + A, function() {
                    E();
                });
            },
            getInline: function(i, a) {
                if (E(), i.src) {
                    var n = t.st.inline,
                        o = e(i.src);
                    if (o.length) {
                        var r = o[0].parentNode;
                        r && r.tagName && (I || (M = n.hiddenClass, I = C(M), M = "mfp-" + M), O = o.after(I).detach().removeClass(M)),
                            t.updateStatus("ready");
                    } else t.updateStatus("error", n.tNotFound), o = e("<div>");
                    return i.inlineElement = o, o;
                }
                return t.updateStatus("ready"), t._parseMarkup(a, {}, i), a;
            }
        }
    });
    var P, z = "ajax",
        R = function() {
            P && e(document.body).removeClass(P);
        },
        q = function() {
            R(), t.req && t.req.abort();
        };
    e.magnificPopup.registerModule(z, {
        options: {
            settings: null,
            cursor: "mfp-ajax-cur",
            tError: '<a href="%url%">The content</a> could not be loaded.'
        },
        proto: {
            initAjax: function() {
                t.types.push(z), P = t.st.ajax.cursor, _(s + "." + z, q), _("BeforeChange." + z, q);
            },
            getAjax: function(i) {
                P && e(document.body).addClass(P), t.updateStatus("loading");
                var a = e.extend({
                    url: i.src,
                    success: function(a, n, o) {
                        var r = {
                            data: a,
                            xhr: o
                        };
                        S("ParseAjax", r), t.appendContent(e(r.data), z), i.finished = !0, R(), t._setFocus(),
                            setTimeout(function() {
                                t.wrap.addClass(h);
                            }, 16), t.updateStatus("ready"), S("AjaxContentAdded");
                    },
                    error: function() {
                        R(), i.finished = i.loadError = !0, t.updateStatus("error", t.st.ajax.tError.replace("%url%", i.src));
                    }
                }, t.st.ajax.settings);
                return t.req = e.ajax(a), "";
            }
        }
    });
    var j, D = function() {
        return void 0 === j && (j = void 0 !== document.createElement("p").style.MozTransform),
            j;
    };
    e.magnificPopup.registerModule("zoom", {
        options: {
            enabled: !1,
            easing: "ease-in-out",
            duration: 300,
            opener: function(e) {
                return e.is("img") ? e : e.find("img");
            }
        },
        proto: {
            initZoom: function() {
                var e, i = t.st.zoom,
                    a = ".zoom";
                if (i.enabled && t.supportsTransition) {
                    var n, o, r = i.duration,
                        c = function(e) {
                            var t = e.clone().removeAttr("style").removeAttr("class").addClass("mfp-animated-image"),
                                a = "all " + i.duration / 1e3 + "s " + i.easing,
                                n = {
                                    position: "fixed",
                                    zIndex: 9999,
                                    left: 0,
                                    top: 0,
                                    "-webkit-backface-visibility": "hidden"
                                },
                                o = "transition";
                            return n["-webkit-" + o] = n["-moz-" + o] = n["-o-" + o] = n[o] = a, t.css(n), t;
                        },
                        d = function() {
                            t.content.css("visibility", "visible");
                        };
                    _("BuildControls" + a, function() {
                        if (t._allowZoom()) {
                            if (clearTimeout(n), t.content.css("visibility", "hidden"), e = t._getItemToZoom(), !e) return void d();
                            o = c(e), o.css(t._getOffset()), t.wrap.append(o), n = setTimeout(function() {
                                o.css(t._getOffset(!0)), n = setTimeout(function() {
                                    d(), setTimeout(function() {
                                        o.remove(), e = o = null, S("ZoomAnimationEnded");
                                    }, 16);
                                }, r);
                            }, 16);
                        }
                    }), _(l + a, function() {
                        if (t._allowZoom()) {
                            if (clearTimeout(n), t.st.removalDelay = r, !e) {
                                if (e = t._getItemToZoom(), !e) return;
                                o = c(e);
                            }
                            o.css(t._getOffset(!0)), t.wrap.append(o), t.content.css("visibility", "hidden"),
                                setTimeout(function() {
                                    o.css(t._getOffset());
                                }, 16);
                        }
                    }), _(s + a, function() {
                        t._allowZoom() && (d(), o && o.remove(), e = null);
                    });
                }
            },
            _allowZoom: function() {
                return "image" === t.currItem.type;
            },
            _getItemToZoom: function() {
                return t.currItem.hasSize ? t.currItem.img : !1;
            },
            _getOffset: function(i) {
                var a;
                a = i ? t.currItem.img : t.st.zoom.opener(t.currItem.el || t.currItem);
                var n = a.offset(),
                    o = parseInt(a.css("padding-top"), 10),
                    r = parseInt(a.css("padding-bottom"), 10);
                n.top -= e(window).scrollTop() - o;
                var s = {
                    width: a.width(),
                    height: (x ? a.innerHeight() : a[0].offsetHeight) - r - o
                };
                return D() ? s["-moz-transform"] = s.transform = "translate(" + n.left + "px," + n.top + "px)" : (s.left = n.left, s.top = n.top), s;
            }
        }
    }), T();
}), ! function(e) {
    "function" == typeof define && define.amd ? define(["jquery"], e) : "undefined" != typeof module && module.exports ? module.exports = e : e(jQuery, window, document);
}(function(e) {
    ! function(t) {
        var i = "function" == typeof define && define.amd,
            a = "undefined" != typeof module && module.exports,
            n = "https:" == document.location.protocol ? "https:" : "http:",
            o = "cdnjs.cloudflare.com/ajax/libs/jquery-mousewheel/3.1.13/jquery.mousewheel.min.js";
        i || (a ? require("jquery-mousewheel")(e) : e.event.special.mousewheel || e("head").append(decodeURI("%3Cscript src=" + n + "//" + o + "%3E%3C/script%3E"))),
            t();
    }(function() {
        var t, i = "mCustomScrollbar",
            a = "mCS",
            n = ".mCustomScrollbar",
            o = {
                setTop: 0,
                setLeft: 0,
                axis: "y",
                scrollbarPosition: "inside",
                scrollInertia: 950,
                autoDraggerLength: !0,
                alwaysShowScrollbar: 0,
                snapOffset: 0,
                mouseWheel: {
                    enable: !0,
                    scrollAmount: "auto",
                    axis: "y",
                    deltaFactor: "auto",
                    disableOver: ["select", "option", "keygen", "datalist", "textarea"]
                },
                scrollButtons: {
                    scrollType: "stepless",
                    scrollAmount: "auto"
                },
                keyboard: {
                    enable: !0,
                    scrollType: "stepless",
                    scrollAmount: "auto"
                },
                contentTouchScroll: 25,
                documentTouchScroll: !0,
                advanced: {
                    autoScrollOnFocus: "input,textarea,select,button,datalist,keygen,a[tabindex],area,object,[contenteditable='true']",
                    updateOnContentResize: !0,
                    updateOnImageLoad: "auto",
                    autoUpdateTimeout: 60
                },
                theme: "light",
                callbacks: {
                    onTotalScrollOffset: 0,
                    onTotalScrollBackOffset: 0,
                    alwaysTriggerOffsets: !0
                }
            },
            r = 0,
            s = {},
            l = window.attachEvent && !window.addEventListener ? 1 : 0,
            c = !1,
            d = ["mCSB_dragger_onDrag", "mCSB_scrollTools_onDrag", "mCS_img_loaded", "mCS_disabled", "mCS_destroyed", "mCS_no_scrollbar", "mCS-autoHide", "mCS-dir-rtl", "mCS_no_scrollbar_y", "mCS_no_scrollbar_x", "mCS_y_hidden", "mCS_x_hidden", "mCSB_draggerContainer", "mCSB_buttonUp", "mCSB_buttonDown", "mCSB_buttonLeft", "mCSB_buttonRight"],
            u = {
                init: function(t) {
                    var t = e.extend(!0, {}, o, t),
                        i = p.call(this);
                    if (t.live) {
                        var l = t.liveSelector || this.selector || n,
                            c = e(l);
                        if ("off" === t.live) return void m(l);
                        s[l] = setTimeout(function() {
                            c.mCustomScrollbar(t), "once" === t.live && c.length && m(l);
                        }, 500);
                    } else m(l);
                    return t.setWidth = t.set_width ? t.set_width : t.setWidth, t.setHeight = t.set_height ? t.set_height : t.setHeight,
                        t.axis = t.horizontalScroll ? "x" : v(t.axis), t.scrollInertia = t.scrollInertia > 0 && t.scrollInertia < 17 ? 17 : t.scrollInertia, "object" != typeof t.mouseWheel && 1 == t.mouseWheel && (t.mouseWheel = {
                            enable: !0,
                            scrollAmount: "auto",
                            axis: "y",
                            preventDefault: !1,
                            deltaFactor: "auto",
                            normalizeDelta: !1,
                            invert: !1
                        }), t.mouseWheel.scrollAmount = t.mouseWheelPixels ? t.mouseWheelPixels : t.mouseWheel.scrollAmount,
                        t.mouseWheel.normalizeDelta = t.advanced.normalizeMouseWheelDelta ? t.advanced.normalizeMouseWheelDelta : t.mouseWheel.normalizeDelta,
                        t.scrollButtons.scrollType = h(t.scrollButtons.scrollType), f(t), e(i).each(function() {
                            var i = e(this);
                            if (!i.data(a)) {
                                i.data(a, {
                                    idx: ++r,
                                    opt: t,
                                    scrollRatio: {
                                        y: null,
                                        x: null
                                    },
                                    overflowed: null,
                                    contentReset: {
                                        y: null,
                                        x: null
                                    },
                                    bindEvents: !1,
                                    tweenRunning: !1,
                                    sequential: {},
                                    langDir: i.css("direction"),
                                    cbOffsets: null,
                                    trigger: null,
                                    poll: {
                                        size: {
                                            o: 0,
                                            n: 0
                                        },
                                        img: {
                                            o: 0,
                                            n: 0
                                        },
                                        change: {
                                            o: 0,
                                            n: 0
                                        }
                                    }
                                });
                                var n = i.data(a),
                                    o = n.opt,
                                    s = i.data("mcs-axis"),
                                    l = i.data("mcs-scrollbar-position"),
                                    c = i.data("mcs-theme");
                                s && (o.axis = s), l && (o.scrollbarPosition = l), c && (o.theme = c, f(o)), g.call(this),
                                    n && o.callbacks.onCreate && "function" == typeof o.callbacks.onCreate && o.callbacks.onCreate.call(this),
                                    e("#mCSB_" + n.idx + "_container img:not(." + d[2] + ")").addClass(d[2]), u.update.call(null, i);
                            }
                        });
                },
                update: function(t, i) {
                    var n = t || p.call(this);
                    return e(n).each(function() {
                        var t = e(this);
                        if (t.data(a)) {
                            var n = t.data(a),
                                o = n.opt,
                                r = e("#mCSB_" + n.idx + "_container"),
                                s = e("#mCSB_" + n.idx),
                                l = [e("#mCSB_" + n.idx + "_dragger_vertical"), e("#mCSB_" + n.idx + "_dragger_horizontal")];
                            if (!r.length) return;
                            n.tweenRunning && $(t), i && n && o.callbacks.onBeforeUpdate && "function" == typeof o.callbacks.onBeforeUpdate && o.callbacks.onBeforeUpdate.call(this),
                                t.hasClass(d[3]) && t.removeClass(d[3]), t.hasClass(d[4]) && t.removeClass(d[4]),
                                s.css("max-height", "none"), s.height() !== t.height() && s.css("max-height", t.height()),
                                b.call(this), "y" === o.axis || o.advanced.autoExpandHorizontalScroll || r.css("width", y(r)),
                                n.overflowed = S.call(this), M.call(this), o.autoDraggerLength && w.call(this),
                                _.call(this), T.call(this);
                            var c = [Math.abs(r[0].offsetTop), Math.abs(r[0].offsetLeft)];
                            "x" !== o.axis && (n.overflowed[0] ? l[0].height() > l[0].parent().height() ? k.call(this) : (Z(t, "" + c[0], {
                                    dir: "y",
                                    dur: 0,
                                    overwrite: "none"
                                }), n.contentReset.y = null) : (k.call(this), "y" === o.axis ? B.call(this) : "yx" === o.axis && n.overflowed[1] && Z(t, "" + c[1], {
                                    dir: "x",
                                    dur: 0,
                                    overwrite: "none"
                                }))), "y" !== o.axis && (n.overflowed[1] ? l[1].width() > l[1].parent().width() ? k.call(this) : (Z(t, "" + c[1], {
                                    dir: "x",
                                    dur: 0,
                                    overwrite: "none"
                                }), n.contentReset.x = null) : (k.call(this), "x" === o.axis ? B.call(this) : "yx" === o.axis && n.overflowed[0] && Z(t, "" + c[0], {
                                    dir: "y",
                                    dur: 0,
                                    overwrite: "none"
                                }))), i && n && (2 === i && o.callbacks.onImageLoad && "function" == typeof o.callbacks.onImageLoad ? o.callbacks.onImageLoad.call(this) : 3 === i && o.callbacks.onSelectorChange && "function" == typeof o.callbacks.onSelectorChange ? o.callbacks.onSelectorChange.call(this) : o.callbacks.onUpdate && "function" == typeof o.callbacks.onUpdate && o.callbacks.onUpdate.call(this)),
                                X.call(this);
                        }
                    });
                },
                scrollTo: function(t, i) {
                    if (void 0 !== t && null != t) {
                        var n = p.call(this);
                        return e(n).each(function() {
                            var n = e(this);
                            if (n.data(a)) {
                                var o = n.data(a),
                                    r = o.opt,
                                    s = {
                                        trigger: "external",
                                        scrollInertia: r.scrollInertia,
                                        scrollEasing: "mcsEaseInOut",
                                        moveDragger: !1,
                                        timeout: 60,
                                        callbacks: !0,
                                        onStart: !0,
                                        onUpdate: !0,
                                        onComplete: !0
                                    },
                                    l = e.extend(!0, {}, s, i),
                                    c = U.call(this, t),
                                    d = l.scrollInertia > 0 && l.scrollInertia < 17 ? 17 : l.scrollInertia;
                                c[0] = Y.call(this, c[0], "y"), c[1] = Y.call(this, c[1], "x"), l.moveDragger && (c[0] *= o.scrollRatio.y, c[1] *= o.scrollRatio.x), l.dur = ne() ? 0 : d, setTimeout(function() {
                                    null !== c[0] && void 0 !== c[0] && "x" !== r.axis && o.overflowed[0] && (l.dir = "y", l.overwrite = "all", Z(n, "" + c[0], l)), null !== c[1] && void 0 !== c[1] && "y" !== r.axis && o.overflowed[1] && (l.dir = "x", l.overwrite = "none", Z(n, "" + c[1], l));
                                }, l.timeout);
                            }
                        });
                    }
                },
                stop: function() {
                    var t = p.call(this);
                    return e(t).each(function() {
                        var t = e(this);
                        t.data(a) && $(t);
                    });
                },
                disable: function(t) {
                    var i = p.call(this);
                    return e(i).each(function() {
                        var i = e(this);
                        i.data(a) && (i.data(a), X.call(this, "remove"), B.call(this), t && k.call(this), M.call(this, !0), i.addClass(d[3]));
                    });
                },
                destroy: function() {
                    var t = p.call(this);
                    return e(t).each(function() {
                        var n = e(this);
                        if (n.data(a)) {
                            var o = n.data(a),
                                r = o.opt,
                                s = e("#mCSB_" + o.idx),
                                l = e("#mCSB_" + o.idx + "_container"),
                                c = e(".mCSB_" + o.idx + "_scrollbar");
                            r.live && m(r.liveSelector || e(t).selector), X.call(this, "remove"), B.call(this),
                                k.call(this), n.removeData(a), G(this, "mcs"), c.remove(), l.find("img." + d[2]).removeClass(d[2]),
                                s.replaceWith(l.contents()), n.removeClass(i + " _" + a + "_" + o.idx + " " + d[6] + " " + d[7] + " " + d[5] + " " + d[3]).addClass(d[4]);
                        }
                    });
                }
            },
            p = function() {
                return "object" != typeof e(this) || e(this).length < 1 ? n : this;
            },
            f = function(t) {
                var i = ["rounded", "rounded-dark", "rounded-dots", "rounded-dots-dark"],
                    a = ["rounded-dots", "rounded-dots-dark", "3d", "3d-dark", "3d-thick", "3d-thick-dark", "inset", "inset-dark", "inset-2", "inset-2-dark", "inset-3", "inset-3-dark"],
                    n = ["minimal", "minimal-dark"],
                    o = ["minimal", "minimal-dark"],
                    r = ["minimal", "minimal-dark"];
                t.autoDraggerLength = e.inArray(t.theme, i) > -1 ? !1 : t.autoDraggerLength, t.autoExpandScrollbar = e.inArray(t.theme, a) > -1 ? !1 : t.autoExpandScrollbar,
                    t.scrollButtons.enable = e.inArray(t.theme, n) > -1 ? !1 : t.scrollButtons.enable,
                    t.autoHideScrollbar = e.inArray(t.theme, o) > -1 ? !0 : t.autoHideScrollbar, t.scrollbarPosition = e.inArray(t.theme, r) > -1 ? "outside" : t.scrollbarPosition;
            },
            m = function(e) {
                s[e] && (clearTimeout(s[e]), G(s, e));
            },
            v = function(e) {
                return "yx" === e || "xy" === e || "auto" === e ? "yx" : "x" === e || "horizontal" === e ? "x" : "y";
            },
            h = function(e) {
                return "stepped" === e || "pixels" === e || "step" === e || "click" === e ? "stepped" : "stepless";
            },
            g = function() {
                var t = e(this),
                    n = t.data(a),
                    o = n.opt,
                    r = o.autoExpandScrollbar ? " " + d[1] + "_expand" : "",
                    s = ["<div id='mCSB_" + n.idx + "_scrollbar_vertical' class='mCSB_scrollTools mCSB_" + n.idx + "_scrollbar mCS-" + o.theme + " mCSB_scrollTools_vertical" + r + "'><div class='" + d[12] + "'><div id='mCSB_" + n.idx + "_dragger_vertical' class='mCSB_dragger' style='position:absolute;'><div class='mCSB_dragger_bar' /></div><div class='mCSB_draggerRail' /></div></div>", "<div id='mCSB_" + n.idx + "_scrollbar_horizontal' class='mCSB_scrollTools mCSB_" + n.idx + "_scrollbar mCS-" + o.theme + " mCSB_scrollTools_horizontal" + r + "'><div class='" + d[12] + "'><div id='mCSB_" + n.idx + "_dragger_horizontal' class='mCSB_dragger' style='position:absolute;'><div class='mCSB_dragger_bar' /></div><div class='mCSB_draggerRail' /></div></div>"],
                    l = "yx" === o.axis ? "mCSB_vertical_horizontal" : "x" === o.axis ? "mCSB_horizontal" : "mCSB_vertical",
                    c = "yx" === o.axis ? s[0] + s[1] : "x" === o.axis ? s[1] : s[0],
                    u = "yx" === o.axis ? "<div id='mCSB_" + n.idx + "_container_wrapper' class='mCSB_container_wrapper' />" : "",
                    p = o.autoHideScrollbar ? " " + d[6] : "",
                    f = "x" !== o.axis && "rtl" === n.langDir ? " " + d[7] : "";
                o.setWidth && t.css("width", o.setWidth), o.setHeight && t.css("height", o.setHeight),
                    o.setLeft = "y" !== o.axis && "rtl" === n.langDir ? "989999px" : o.setLeft, t.addClass(i + " _" + a + "_" + n.idx + p + f).wrapInner("<div id='mCSB_" + n.idx + "' class='mCustomScrollBox mCS-" + o.theme + " " + l + "'><div id='mCSB_" + n.idx + "_container' class='mCSB_container' style='position:relative; top:" + o.setTop + "; left:" + o.setLeft + ";' dir='" + n.langDir + "' /></div>");
                var m = e("#mCSB_" + n.idx),
                    v = e("#mCSB_" + n.idx + "_container");
                "y" === o.axis || o.advanced.autoExpandHorizontalScroll || v.css("width", y(v)), "outside" === o.scrollbarPosition ? ("static" === t.css("position") && t.css("position", "relative"), t.css("overflow", "visible"), m.addClass("mCSB_outside").after(c)) : (m.addClass("mCSB_inside").append(c), v.wrap(u)), x.call(this);
                var h = [e("#mCSB_" + n.idx + "_dragger_vertical"), e("#mCSB_" + n.idx + "_dragger_horizontal")];
                h[0].css("min-height", h[0].height()), h[1].css("min-width", h[1].width());
            },
            y = function(t) {
                var i = [t[0].scrollWidth, Math.max.apply(Math, t.children().map(function() {
                        return e(this).outerWidth(!0);
                    }).get())],
                    a = t.parent().width();
                return i[0] > a ? i[0] : i[1] > a ? i[1] : "100%";
            },
            b = function() {
                var t = e(this),
                    i = t.data(a),
                    n = i.opt,
                    o = e("#mCSB_" + i.idx + "_container");
                if (n.advanced.autoExpandHorizontalScroll && "y" !== n.axis) {
                    o.css({
                        width: "auto",
                        "min-width": 0,
                        "overflow-x": "scroll"
                    });
                    var r = Math.ceil(o[0].scrollWidth);
                    3 === n.advanced.autoExpandHorizontalScroll || 2 !== n.advanced.autoExpandHorizontalScroll && r > o.parent().width() ? o.css({
                        width: r,
                        "min-width": "100%",
                        "overflow-x": "inherit"
                    }) : o.css({
                        "overflow-x": "inherit",
                        position: "absolute"
                    }).wrap("<div class='mCSB_h_wrapper' style='position:relative; left:0; width:999999px;' />").css({
                        width: Math.ceil(o[0].getBoundingClientRect().right + .4) - Math.floor(o[0].getBoundingClientRect().left),
                        "min-width": "100%",
                        position: "relative"
                    }).unwrap();
                }
            },
            x = function() {
                var t = e(this),
                    i = t.data(a),
                    n = i.opt,
                    o = e(".mCSB_" + i.idx + "_scrollbar:first"),
                    r = ie(n.scrollButtons.tabindex) ? "tabindex='" + n.scrollButtons.tabindex + "'" : "",
                    s = ["<a href='#' class='" + d[13] + "' " + r + " />", "<a href='#' class='" + d[14] + "' " + r + " />", "<a href='#' class='" + d[15] + "' " + r + " />", "<a href='#' class='" + d[16] + "' " + r + " />"],
                    l = ["x" === n.axis ? s[2] : s[0], "x" === n.axis ? s[3] : s[1], s[2], s[3]];
                n.scrollButtons.enable && o.prepend(l[0]).append(l[1]).next(".mCSB_scrollTools").prepend(l[2]).append(l[3]);
            },
            w = function() {
                var t = e(this),
                    i = t.data(a),
                    n = e("#mCSB_" + i.idx),
                    o = e("#mCSB_" + i.idx + "_container"),
                    r = [e("#mCSB_" + i.idx + "_dragger_vertical"), e("#mCSB_" + i.idx + "_dragger_horizontal")],
                    s = [n.height() / o.outerHeight(!1), n.width() / o.outerWidth(!1)],
                    c = [parseInt(r[0].css("min-height")), Math.round(s[0] * r[0].parent().height()), parseInt(r[1].css("min-width")), Math.round(s[1] * r[1].parent().width())],
                    d = l && c[1] < c[0] ? c[0] : c[1],
                    u = l && c[3] < c[2] ? c[2] : c[3];
                r[0].css({
                    height: d,
                    "max-height": r[0].parent().height() - 10
                }).find(".mCSB_dragger_bar").css({
                    "line-height": c[0] + "px"
                }), r[1].css({
                    width: u,
                    "max-width": r[1].parent().width() - 10
                });
            },
            _ = function() {
                var t = e(this),
                    i = t.data(a),
                    n = e("#mCSB_" + i.idx),
                    o = e("#mCSB_" + i.idx + "_container"),
                    r = [e("#mCSB_" + i.idx + "_dragger_vertical"), e("#mCSB_" + i.idx + "_dragger_horizontal")],
                    s = [o.outerHeight(!1) - n.height(), o.outerWidth(!1) - n.width()],
                    l = [s[0] / (r[0].parent().height() - r[0].height()), s[1] / (r[1].parent().width() - r[1].width())];
                i.scrollRatio = {
                    y: l[0],
                    x: l[1]
                };
            },
            C = function(e, t, i) {
                var a = i ? d[0] + "_expanded" : "",
                    n = e.closest(".mCSB_scrollTools");
                "active" === t ? (e.toggleClass(d[0] + " " + a), n.toggleClass(d[1]), e[0]._draggable = e[0]._draggable ? 0 : 1) : e[0]._draggable || ("hide" === t ? (e.removeClass(d[0]), n.removeClass(d[1])) : (e.addClass(d[0]), n.addClass(d[1])));
            },
            S = function() {
                var t = e(this),
                    i = t.data(a),
                    n = e("#mCSB_" + i.idx),
                    o = e("#mCSB_" + i.idx + "_container"),
                    r = null == i.overflowed ? o.height() : o.outerHeight(!1),
                    s = null == i.overflowed ? o.width() : o.outerWidth(!1),
                    l = o[0].scrollHeight,
                    c = o[0].scrollWidth;
                return l > r && (r = l), c > s && (s = c), [r > n.height(), s > n.width()];
            },
            k = function() {
                var t = e(this),
                    i = t.data(a),
                    n = i.opt,
                    o = e("#mCSB_" + i.idx),
                    r = e("#mCSB_" + i.idx + "_container"),
                    s = [e("#mCSB_" + i.idx + "_dragger_vertical"), e("#mCSB_" + i.idx + "_dragger_horizontal")];
                if ($(t), ("x" !== n.axis && !i.overflowed[0] || "y" === n.axis && i.overflowed[0]) && (s[0].add(r).css("top", 0), Z(t, "_resetY")), "y" !== n.axis && !i.overflowed[1] || "x" === n.axis && i.overflowed[1]) {
                    var l = dx = 0;
                    "rtl" === i.langDir && (l = o.width() - r.outerWidth(!1), dx = Math.abs(l / i.scrollRatio.x)),
                        r.css("left", l), s[1].css("left", dx), Z(t, "_resetX");
                }
            },
            T = function() {
                function t() {
                    r = setTimeout(function() {
                        e.event.special.mousewheel ? (clearTimeout(r), P.call(i[0])) : t();
                    }, 100);
                }
                var i = e(this),
                    n = i.data(a),
                    o = n.opt;
                if (!n.bindEvents) {
                    if (O.call(this), o.contentTouchScroll && A.call(this), E.call(this), o.mouseWheel.enable) {
                        var r;
                        t();
                    }
                    D.call(this), F.call(this), o.advanced.autoScrollOnFocus && L.call(this), o.scrollButtons.enable && W.call(this),
                        o.keyboard.enable && H.call(this), n.bindEvents = !0;
                }
            },
            B = function() {
                var t = e(this),
                    i = t.data(a),
                    n = i.opt,
                    o = a + "_" + i.idx,
                    r = ".mCSB_" + i.idx + "_scrollbar",
                    s = e("#mCSB_" + i.idx + ",#mCSB_" + i.idx + "_container,#mCSB_" + i.idx + "_container_wrapper," + r + " ." + d[12] + ",#mCSB_" + i.idx + "_dragger_vertical,#mCSB_" + i.idx + "_dragger_horizontal," + r + ">a"),
                    l = e("#mCSB_" + i.idx + "_container");
                n.advanced.releaseDraggableSelectors && s.add(e(n.advanced.releaseDraggableSelectors)),
                    n.advanced.extraDraggableSelectors && s.add(e(n.advanced.extraDraggableSelectors)),
                    i.bindEvents && (e(document).add(e(!R() || top.document)).unbind("." + o), s.each(function() {
                        e(this).unbind("." + o);
                    }), clearTimeout(t[0]._focusTimeout), G(t[0], "_focusTimeout"), clearTimeout(i.sequential.step), G(i.sequential, "step"), clearTimeout(l[0].onCompleteTimeout), G(l[0], "onCompleteTimeout"), i.bindEvents = !1);
            },
            M = function(t) {
                var i = e(this),
                    n = i.data(a),
                    o = n.opt,
                    r = e("#mCSB_" + n.idx + "_container_wrapper"),
                    s = r.length ? r : e("#mCSB_" + n.idx + "_container"),
                    l = [e("#mCSB_" + n.idx + "_scrollbar_vertical"), e("#mCSB_" + n.idx + "_scrollbar_horizontal")],
                    c = [l[0].find(".mCSB_dragger"), l[1].find(".mCSB_dragger")];
                "x" !== o.axis && (n.overflowed[0] && !t ? (l[0].add(c[0]).add(l[0].children("a")).css("display", "block"), s.removeClass(d[8] + " " + d[10])) : (o.alwaysShowScrollbar ? (2 !== o.alwaysShowScrollbar && c[0].css("display", "none"), s.removeClass(d[10])) : (l[0].css("display", "none"), s.addClass(d[10])), s.addClass(d[8]))), "y" !== o.axis && (n.overflowed[1] && !t ? (l[1].add(c[1]).add(l[1].children("a")).css("display", "block"), s.removeClass(d[9] + " " + d[11])) : (o.alwaysShowScrollbar ? (2 !== o.alwaysShowScrollbar && c[1].css("display", "none"), s.removeClass(d[11])) : (l[1].css("display", "none"), s.addClass(d[11])), s.addClass(d[9]))),
                    n.overflowed[0] || n.overflowed[1] ? i.removeClass(d[5]) : i.addClass(d[5]);
            },
            I = function(t) {
                var i = t.type,
                    a = t.target.ownerDocument !== document && null !== frameElement ? [e(frameElement).offset().top, e(frameElement).offset().left] : null,
                    n = R() && t.target.ownerDocument !== top.document && null !== frameElement ? [e(t.view.frameElement).offset().top, e(t.view.frameElement).offset().left] : [0, 0];
                switch (i) {
                    case "pointerdown":
                    case "MSPointerDown":
                    case "pointermove":
                    case "MSPointerMove":
                    case "pointerup":
                    case "MSPointerUp":
                        return a ? [t.originalEvent.pageY - a[0] + n[0], t.originalEvent.pageX - a[1] + n[1], !1] : [t.originalEvent.pageY, t.originalEvent.pageX, !1];
                    case "touchstart":
                    case "touchmove":
                    case "touchend":
                        var o = t.originalEvent.touches[0] || t.originalEvent.changedTouches[0],
                            r = t.originalEvent.touches.length || t.originalEvent.changedTouches.length;
                        return t.target.ownerDocument !== document ? [o.screenY, o.screenX, r > 1] : [o.pageY, o.pageX, r > 1];
                    default:
                        return a ? [t.pageY - a[0] + n[0], t.pageX - a[1] + n[1], !1] : [t.pageY, t.pageX, !1];
                }
            },
            O = function() {
                function t(e, t, a, n) {
                    if (f[0].idleTimer = d.scrollInertia < 233 ? 250 : 0, i.attr("id") === p[1]) var o = "x",
                        l = (i[0].offsetLeft - t + n) * s.scrollRatio.x;
                    else var o = "y",
                        l = (i[0].offsetTop - e + a) * s.scrollRatio.y;
                    Z(r, "" + l, {
                        dir: o,
                        drag: !0
                    });
                }
                var i, n, o, r = e(this),
                    s = r.data(a),
                    d = s.opt,
                    u = a + "_" + s.idx,
                    p = ["mCSB_" + s.idx + "_dragger_vertical", "mCSB_" + s.idx + "_dragger_horizontal"],
                    f = e("#mCSB_" + s.idx + "_container"),
                    m = e("#" + p[0] + ",#" + p[1]),
                    v = d.advanced.releaseDraggableSelectors ? m.add(e(d.advanced.releaseDraggableSelectors)) : m,
                    h = d.advanced.extraDraggableSelectors ? e(!R() || top.document).add(e(d.advanced.extraDraggableSelectors)) : e(!R() || top.document);
                m.bind("contextmenu." + u, function(e) {
                    e.preventDefault();
                }).bind("mousedown." + u + " touchstart." + u + " pointerdown." + u + " MSPointerDown." + u, function(t) {
                    if (t.stopImmediatePropagation(), t.preventDefault(), ee(t)) {
                        c = !0, l && (document.onselectstart = function() {
                            return !1;
                        }), q.call(f, !1), $(r), i = e(this);
                        var a = i.offset(),
                            s = I(t)[0] - a.top,
                            u = I(t)[1] - a.left,
                            p = i.height() + a.top,
                            m = i.width() + a.left;
                        p > s && s > 0 && m > u && u > 0 && (n = s, o = u), C(i, "active", d.autoExpandScrollbar);
                    }
                }).bind("touchmove." + u, function(e) {
                    e.stopImmediatePropagation(), e.preventDefault();
                    var a = i.offset(),
                        r = I(e)[0] - a.top,
                        s = I(e)[1] - a.left;
                    t(n, o, r, s);
                }), e(document).add(h).bind("mousemove." + u + " pointermove." + u + " MSPointerMove." + u, function(e) {
                    if (i) {
                        var a = i.offset(),
                            r = I(e)[0] - a.top,
                            s = I(e)[1] - a.left;
                        if (n === r && o === s) return;
                        t(n, o, r, s);
                    }
                }).add(v).bind("mouseup." + u + " touchend." + u + " pointerup." + u + " MSPointerUp." + u, function() {
                    i && (C(i, "active", d.autoExpandScrollbar), i = null), c = !1, l && (document.onselectstart = null),
                        q.call(f, !0);
                });
            },
            A = function() {
                function i(e) {
                    if (!te(e) || c || I(e)[2]) return void(t = 0);
                    t = 1, _ = 0, C = 0, d = 1, S.removeClass("mCS_touch_action");
                    var i = O.offset();
                    u = I(e)[0] - i.top, p = I(e)[1] - i.left, j = [I(e)[0], I(e)[1]];
                }

                function n(e) {
                    if (te(e) && !c && !I(e)[2] && (T.documentTouchScroll || e.preventDefault(), e.stopImmediatePropagation(), (!C || _) && d)) {
                        h = Q();
                        var t = M.offset(),
                            i = I(e)[0] - t.top,
                            a = I(e)[1] - t.left,
                            n = "mcsLinearOut";
                        if (E.push(i), P.push(a), j[2] = Math.abs(I(e)[0] - j[0]), j[3] = Math.abs(I(e)[1] - j[1]), k.overflowed[0]) var o = A[0].parent().height() - A[0].height(),
                            r = u - i > 0 && i - u > -(o * k.scrollRatio.y) && (2 * j[3] < j[2] || "yx" === T.axis);
                        if (k.overflowed[1]) var s = A[1].parent().width() - A[1].width(),
                            f = p - a > 0 && a - p > -(s * k.scrollRatio.x) && (2 * j[2] < j[3] || "yx" === T.axis);
                        r || f ? (F || e.preventDefault(), _ = 1) : (C = 1, S.addClass("mCS_touch_action")),
                            F && e.preventDefault(), x = "yx" === T.axis ? [u - i, p - a] : "x" === T.axis ? [null, p - a] : [u - i, null],
                            O[0].idleTimer = 250, k.overflowed[0] && l(x[0], z, n, "y", "all", !0), k.overflowed[1] && l(x[1], z, n, "x", q, !0);
                    }
                }

                function o(e) {
                    if (!te(e) || c || I(e)[2]) return void(t = 0);
                    t = 1, e.stopImmediatePropagation(), $(S), v = Q();
                    var i = M.offset();
                    f = I(e)[0] - i.top, m = I(e)[1] - i.left, E = [], P = [];
                }

                function r(e) {
                    if (te(e) && !c && !I(e)[2]) {
                        d = 0, e.stopImmediatePropagation(), _ = 0, C = 0, g = Q();
                        var t = M.offset(),
                            i = I(e)[0] - t.top,
                            a = I(e)[1] - t.left;
                        if (!(g - h > 30)) {
                            b = 1e3 / (g - v);
                            var n = "mcsEaseOut",
                                o = 2.5 > b,
                                r = o ? [E[E.length - 2], P[P.length - 2]] : [0, 0];
                            y = o ? [i - r[0], a - r[1]] : [i - f, a - m];
                            var u = [Math.abs(y[0]), Math.abs(y[1])];
                            b = o ? [Math.abs(y[0] / 4), Math.abs(y[1] / 4)] : [b, b];
                            var p = [Math.abs(O[0].offsetTop) - y[0] * s(u[0] / b[0], b[0]), Math.abs(O[0].offsetLeft) - y[1] * s(u[1] / b[1], b[1])];
                            x = "yx" === T.axis ? [p[0], p[1]] : "x" === T.axis ? [null, p[1]] : [p[0], null],
                                w = [4 * u[0] + T.scrollInertia, 4 * u[1] + T.scrollInertia];
                            var S = parseInt(T.contentTouchScroll) || 0;
                            x[0] = u[0] > S ? x[0] : 0, x[1] = u[1] > S ? x[1] : 0, k.overflowed[0] && l(x[0], w[0], n, "y", q, !1),
                                k.overflowed[1] && l(x[1], w[1], n, "x", q, !1);
                        }
                    }
                }

                function s(e, t) {
                    var i = [1.5 * t, 2 * t, t / 1.5, t / 2];
                    return e > 90 ? t > 4 ? i[0] : i[3] : e > 60 ? t > 3 ? i[3] : i[2] : e > 30 ? t > 8 ? i[1] : t > 6 ? i[0] : t > 4 ? t : i[2] : t > 8 ? t : i[3];
                }

                function l(e, t, i, a, n, o) {
                    e && Z(S, "" + e, {
                        dur: t,
                        scrollEasing: i,
                        dir: a,
                        overwrite: n,
                        drag: o
                    });
                }
                var d, u, p, f, m, v, h, g, y, b, x, w, _, C, S = e(this),
                    k = S.data(a),
                    T = k.opt,
                    B = a + "_" + k.idx,
                    M = e("#mCSB_" + k.idx),
                    O = e("#mCSB_" + k.idx + "_container"),
                    A = [e("#mCSB_" + k.idx + "_dragger_vertical"), e("#mCSB_" + k.idx + "_dragger_horizontal")],
                    E = [],
                    P = [],
                    z = 0,
                    q = "yx" === T.axis ? "none" : "all",
                    j = [],
                    D = O.find("iframe"),
                    L = ["touchstart." + B + " pointerdown." + B + " MSPointerDown." + B, "touchmove." + B + " pointermove." + B + " MSPointerMove." + B, "touchend." + B + " pointerup." + B + " MSPointerUp." + B],
                    F = void 0 !== document.body.style.touchAction && "" !== document.body.style.touchAction;
                O.bind(L[0], function(e) {
                    i(e);
                }).bind(L[1], function(e) {
                    n(e);
                }), M.bind(L[0], function(e) {
                    o(e);
                }).bind(L[2], function(e) {
                    r(e);
                }), D.length && D.each(function() {
                    e(this).bind("load", function() {
                        R(this) && e(this.contentDocument || this.contentWindow.document).bind(L[0], function(e) {
                            i(e), o(e);
                        }).bind(L[1], function(e) {
                            n(e);
                        }).bind(L[2], function(e) {
                            r(e);
                        });
                    });
                });
            },
            E = function() {
                function i() {
                    return window.getSelection ? "" + window.getSelection() : document.selection && "Control" != document.selection.type ? document.selection.createRange().text : 0;
                }

                function n(e, t, i) {
                    d.type = i && o ? "stepped" : "stepless", d.scrollAmount = 10, N(r, e, t, "mcsLinearOut", i ? 60 : null);
                }
                var o, r = e(this),
                    s = r.data(a),
                    l = s.opt,
                    d = s.sequential,
                    u = a + "_" + s.idx,
                    p = e("#mCSB_" + s.idx + "_container"),
                    f = p.parent();
                p.bind("mousedown." + u, function() {
                    t || o || (o = 1, c = !0);
                }).add(document).bind("mousemove." + u, function(e) {
                    if (!t && o && i()) {
                        var a = p.offset(),
                            r = I(e)[0] - a.top + p[0].offsetTop,
                            c = I(e)[1] - a.left + p[0].offsetLeft;
                        r > 0 && r < f.height() && c > 0 && c < f.width() ? d.step && n("off", null, "stepped") : ("x" !== l.axis && s.overflowed[0] && (0 > r ? n("on", 38) : r > f.height() && n("on", 40)), "y" !== l.axis && s.overflowed[1] && (0 > c ? n("on", 37) : c > f.width() && n("on", 39)));
                    }
                }).bind("mouseup." + u + " dragend." + u, function() {
                    t || (o && (o = 0, n("off", null)), c = !1);
                });
            },
            P = function() {
                function t(t, a) {
                    if ($(i), !j(i, t.target)) {
                        var r = "auto" !== o.mouseWheel.deltaFactor ? parseInt(o.mouseWheel.deltaFactor) : l && t.deltaFactor < 100 ? 100 : t.deltaFactor || 100,
                            d = o.scrollInertia;
                        if ("x" === o.axis || "x" === o.mouseWheel.axis) var u = "x",
                            p = [Math.round(r * n.scrollRatio.x), parseInt(o.mouseWheel.scrollAmount)],
                            f = "auto" !== o.mouseWheel.scrollAmount ? p[1] : p[0] >= s.width() ? .9 * s.width() : p[0],
                            m = Math.abs(e("#mCSB_" + n.idx + "_container")[0].offsetLeft),
                            v = c[1][0].offsetLeft,
                            h = c[1].parent().width() - c[1].width(),
                            g = "y" === o.mouseWheel.axis ? t.deltaY || a : t.deltaX;
                        else var u = "y",
                            p = [Math.round(r * n.scrollRatio.y), parseInt(o.mouseWheel.scrollAmount)],
                            f = "auto" !== o.mouseWheel.scrollAmount ? p[1] : p[0] >= s.height() ? .9 * s.height() : p[0],
                            m = Math.abs(e("#mCSB_" + n.idx + "_container")[0].offsetTop),
                            v = c[0][0].offsetTop,
                            h = c[0].parent().height() - c[0].height(),
                            g = t.deltaY || a;
                        "y" === u && !n.overflowed[0] || "x" === u && !n.overflowed[1] || ((o.mouseWheel.invert || t.webkitDirectionInvertedFromDevice) && (g = -g), o.mouseWheel.normalizeDelta && (g = 0 > g ? -1 : 1), (g > 0 && 0 !== v || 0 > g && v !== h || o.mouseWheel.preventDefault) && (t.stopImmediatePropagation(), t.preventDefault()), t.deltaFactor < 5 && !o.mouseWheel.normalizeDelta && (f = t.deltaFactor, d = 17), Z(i, "" + (m - g * f), {
                            dir: u,
                            dur: d
                        }));
                    }
                }
                if (e(this).data(a)) {
                    var i = e(this),
                        n = i.data(a),
                        o = n.opt,
                        r = a + "_" + n.idx,
                        s = e("#mCSB_" + n.idx),
                        c = [e("#mCSB_" + n.idx + "_dragger_vertical"), e("#mCSB_" + n.idx + "_dragger_horizontal")],
                        d = e("#mCSB_" + n.idx + "_container").find("iframe");
                    d.length && d.each(function() {
                        e(this).bind("load", function() {
                            R(this) && e(this.contentDocument || this.contentWindow.document).bind("mousewheel." + r, function(e, i) {
                                t(e, i);
                            });
                        });
                    }), s.bind("mousewheel." + r, function(e, i) {
                        t(e, i);
                    });
                }
            },
            z = {},
            R = function(t) {
                var i = !1,
                    a = !1,
                    n = null;
                if (void 0 === t ? a = "#empty" : void 0 !== e(t).attr("id") && (a = e(t).attr("id")), a !== !1 && void 0 !== z[a]) return z[a];
                if (t) {
                    try {
                        var o = t.contentDocument || t.contentWindow.document;
                        n = o.body.innerHTML;
                    } catch (r) {}
                    i = null !== n;
                } else {
                    try {
                        var o = top.document;
                        n = o.body.innerHTML;
                    } catch (r) {}
                    i = null !== n;
                }
                return a !== !1 && (z[a] = i), i;
            },
            q = function(e) {
                var t = this.find("iframe");
                if (t.length) {
                    var i = e ? "auto" : "none";
                    t.css("pointer-events", i);
                }
            },
            j = function(t, i) {
                var n = i.nodeName.toLowerCase(),
                    o = t.data(a).opt.mouseWheel.disableOver,
                    r = ["select", "textarea"];
                return e.inArray(n, o) > -1 && !(e.inArray(n, r) > -1 && !e(i).is(":focus"));
            },
            D = function() {
                var t, i = e(this),
                    n = i.data(a),
                    o = a + "_" + n.idx,
                    r = e("#mCSB_" + n.idx + "_container"),
                    s = r.parent(),
                    l = e(".mCSB_" + n.idx + "_scrollbar ." + d[12]);
                l.bind("mousedown." + o + " touchstart." + o + " pointerdown." + o + " MSPointerDown." + o, function(i) {
                    c = !0, e(i.target).hasClass("mCSB_dragger") || (t = 1);
                }).bind("touchend." + o + " pointerup." + o + " MSPointerUp." + o, function() {
                    c = !1;
                }).bind("click." + o, function(a) {
                    if (t && (t = 0, e(a.target).hasClass(d[12]) || e(a.target).hasClass("mCSB_draggerRail"))) {
                        $(i);
                        var o = e(this),
                            l = o.find(".mCSB_dragger");
                        if (o.parent(".mCSB_scrollTools_horizontal").length > 0) {
                            if (!n.overflowed[1]) return;
                            var c = "x",
                                u = a.pageX > l.offset().left ? -1 : 1,
                                p = Math.abs(r[0].offsetLeft) - u * (.9 * s.width());
                        } else {
                            if (!n.overflowed[0]) return;
                            var c = "y",
                                u = a.pageY > l.offset().top ? -1 : 1,
                                p = Math.abs(r[0].offsetTop) - u * (.9 * s.height());
                        }
                        Z(i, "" + p, {
                            dir: c,
                            scrollEasing: "mcsEaseInOut"
                        });
                    }
                });
            },
            L = function() {
                var t = e(this),
                    i = t.data(a),
                    n = i.opt,
                    o = a + "_" + i.idx,
                    r = e("#mCSB_" + i.idx + "_container"),
                    s = r.parent();
                r.bind("focusin." + o, function() {
                    var i = e(document.activeElement),
                        a = r.find(".mCustomScrollBox").length,
                        o = 0;
                    i.is(n.advanced.autoScrollOnFocus) && ($(t), clearTimeout(t[0]._focusTimeout), t[0]._focusTimer = a ? (o + 17) * a : 0, t[0]._focusTimeout = setTimeout(function() {
                        var e = [ae(i)[0], ae(i)[1]],
                            a = [r[0].offsetTop, r[0].offsetLeft],
                            l = [a[0] + e[0] >= 0 && a[0] + e[0] < s.height() - i.outerHeight(!1), a[1] + e[1] >= 0 && a[0] + e[1] < s.width() - i.outerWidth(!1)],
                            c = "yx" !== n.axis || l[0] || l[1] ? "all" : "none";
                        "x" === n.axis || l[0] || Z(t, "" + e[0], {
                            dir: "y",
                            scrollEasing: "mcsEaseInOut",
                            overwrite: c,
                            dur: o
                        }), "y" === n.axis || l[1] || Z(t, "" + e[1], {
                            dir: "x",
                            scrollEasing: "mcsEaseInOut",
                            overwrite: c,
                            dur: o
                        });
                    }, t[0]._focusTimer));
                });
            },
            F = function() {
                var t = e(this),
                    i = t.data(a),
                    n = a + "_" + i.idx,
                    o = e("#mCSB_" + i.idx + "_container").parent();
                o.bind("scroll." + n, function() {
                    0 === o.scrollTop() && 0 === o.scrollLeft() || e(".mCSB_" + i.idx + "_scrollbar").css("visibility", "hidden");
                });
            },
            W = function() {
                var t = e(this),
                    i = t.data(a),
                    n = i.opt,
                    o = i.sequential,
                    r = a + "_" + i.idx,
                    s = ".mCSB_" + i.idx + "_scrollbar",
                    l = e(s + ">a");
                l.bind("contextmenu." + r, function(e) {
                    e.preventDefault();
                }).bind("mousedown." + r + " touchstart." + r + " pointerdown." + r + " MSPointerDown." + r + " mouseup." + r + " touchend." + r + " pointerup." + r + " MSPointerUp." + r + " mouseout." + r + " pointerout." + r + " MSPointerOut." + r + " click." + r, function(a) {
                    function r(e, i) {
                        o.scrollAmount = n.scrollButtons.scrollAmount, N(t, e, i);
                    }
                    if (a.preventDefault(), ee(a)) {
                        var s = e(this).attr("class");
                        switch (o.type = n.scrollButtons.scrollType, a.type) {
                            case "mousedown":
                            case "touchstart":
                            case "pointerdown":
                            case "MSPointerDown":
                                if ("stepped" === o.type) return;
                                c = !0, i.tweenRunning = !1, r("on", s);
                                break;
                            case "mouseup":
                            case "touchend":
                            case "pointerup":
                            case "MSPointerUp":
                            case "mouseout":
                            case "pointerout":
                            case "MSPointerOut":
                                if ("stepped" === o.type) return;
                                c = !1, o.dir && r("off", s);
                                break;
                            case "click":
                                if ("stepped" !== o.type || i.tweenRunning) return;
                                r("on", s);
                        }
                    }
                });
            },
            H = function() {
                function t(t) {
                    function a(e, t) {
                        r.type = o.keyboard.scrollType, r.scrollAmount = o.keyboard.scrollAmount, "stepped" === r.type && n.tweenRunning || N(i, e, t);
                    }
                    switch (t.type) {
                        case "blur":
                            n.tweenRunning && r.dir && a("off", null);
                            break;
                        case "keydown":
                        case "keyup":
                            var s = t.keyCode ? t.keyCode : t.which,
                                l = "on";
                            if ("x" !== o.axis && (38 === s || 40 === s) || "y" !== o.axis && (37 === s || 39 === s)) {
                                if ((38 === s || 40 === s) && !n.overflowed[0] || (37 === s || 39 === s) && !n.overflowed[1]) return;
                                "keyup" === t.type && (l = "off"), e(document.activeElement).is(u) || (t.preventDefault(), t.stopImmediatePropagation(), a(l, s));
                            } else if (33 === s || 34 === s) {
                                if ((n.overflowed[0] || n.overflowed[1]) && (t.preventDefault(), t.stopImmediatePropagation()), "keyup" === t.type) {
                                    $(i);
                                    var p = 34 === s ? -1 : 1;
                                    if ("x" === o.axis || "yx" === o.axis && n.overflowed[1] && !n.overflowed[0]) var f = "x",
                                        m = Math.abs(c[0].offsetLeft) - p * (.9 * d.width());
                                    else var f = "y",
                                        m = Math.abs(c[0].offsetTop) - p * (.9 * d.height());
                                    Z(i, "" + m, {
                                        dir: f,
                                        scrollEasing: "mcsEaseInOut"
                                    });
                                }
                            } else if ((35 === s || 36 === s) && !e(document.activeElement).is(u) && ((n.overflowed[0] || n.overflowed[1]) && (t.preventDefault(), t.stopImmediatePropagation()), "keyup" === t.type)) {
                                if ("x" === o.axis || "yx" === o.axis && n.overflowed[1] && !n.overflowed[0]) var f = "x",
                                    m = 35 === s ? Math.abs(d.width() - c.outerWidth(!1)) : 0;
                                else var f = "y",
                                    m = 35 === s ? Math.abs(d.height() - c.outerHeight(!1)) : 0;
                                Z(i, "" + m, {
                                    dir: f,
                                    scrollEasing: "mcsEaseInOut"
                                });
                            }
                    }
                }
                var i = e(this),
                    n = i.data(a),
                    o = n.opt,
                    r = n.sequential,
                    s = a + "_" + n.idx,
                    l = e("#mCSB_" + n.idx),
                    c = e("#mCSB_" + n.idx + "_container"),
                    d = c.parent(),
                    u = "input,textarea,select,datalist,keygen,[contenteditable='true']",
                    p = c.find("iframe"),
                    f = ["blur." + s + " keydown." + s + " keyup." + s];
                p.length && p.each(function() {
                    e(this).bind("load", function() {
                        R(this) && e(this.contentDocument || this.contentWindow.document).bind(f[0], function(e) {
                            t(e);
                        });
                    });
                }), l.attr("tabindex", "0").bind(f[0], function(e) {
                    t(e);
                });
            },
            N = function(t, i, n, o, r) {
                function s(e) {
                    u.snapAmount && (p.scrollAmount = u.snapAmount instanceof Array ? "x" === p.dir[0] ? u.snapAmount[1] : u.snapAmount[0] : u.snapAmount);
                    var i = "stepped" !== p.type,
                        a = r ? r : e ? i ? v / 1.5 : h : 1e3 / 60,
                        n = e ? i ? 7.5 : 40 : 2.5,
                        l = [Math.abs(f[0].offsetTop), Math.abs(f[0].offsetLeft)],
                        d = [c.scrollRatio.y > 10 ? 10 : c.scrollRatio.y, c.scrollRatio.x > 10 ? 10 : c.scrollRatio.x],
                        m = "x" === p.dir[0] ? l[1] + p.dir[1] * (d[1] * n) : l[0] + p.dir[1] * (d[0] * n),
                        g = "x" === p.dir[0] ? l[1] + p.dir[1] * parseInt(p.scrollAmount) : l[0] + p.dir[1] * parseInt(p.scrollAmount),
                        y = "auto" !== p.scrollAmount ? g : m,
                        b = o ? o : e ? i ? "mcsLinearOut" : "mcsEaseInOut" : "mcsLinear",
                        x = !!e;
                    return e && 17 > a && (y = "x" === p.dir[0] ? l[1] : l[0]), Z(t, "" + y, {
                        dir: p.dir[0],
                        scrollEasing: b,
                        dur: a,
                        onComplete: x
                    }), e ? void(p.dir = !1) : (clearTimeout(p.step), void(p.step = setTimeout(function() {
                        s();
                    }, a)));
                }

                function l() {
                    clearTimeout(p.step), G(p, "step"), $(t);
                }
                var c = t.data(a),
                    u = c.opt,
                    p = c.sequential,
                    f = e("#mCSB_" + c.idx + "_container"),
                    m = "stepped" === p.type,
                    v = u.scrollInertia < 26 ? 26 : u.scrollInertia,
                    h = u.scrollInertia < 1 ? 17 : u.scrollInertia;
                switch (i) {
                    case "on":
                        if (p.dir = [n === d[16] || n === d[15] || 39 === n || 37 === n ? "x" : "y", n === d[13] || n === d[15] || 38 === n || 37 === n ? -1 : 1], $(t), ie(n) && "stepped" === p.type) return;
                        s(m);
                        break;
                    case "off":
                        l(), (m || c.tweenRunning && p.dir) && s(!0);
                }
            },
            U = function(t) {
                var i = e(this).data(a).opt,
                    n = [];
                return "function" == typeof t && (t = t()), t instanceof Array ? n = t.length > 1 ? [t[0], t[1]] : "x" === i.axis ? [null, t[0]] : [t[0], null] : (n[0] = t.y ? t.y : t.x || "x" === i.axis ? null : t, n[1] = t.x ? t.x : t.y || "y" === i.axis ? null : t), "function" == typeof n[0] && (n[0] = n[0]()), "function" == typeof n[1] && (n[1] = n[1]()), n;
            },
            Y = function(t, i) {
                if (null != t && void 0 !== t) {
                    var n = e(this),
                        o = n.data(a),
                        r = o.opt,
                        s = e("#mCSB_" + o.idx + "_container"),
                        l = s.parent(),
                        c = typeof t;
                    i || (i = "x" === r.axis ? "x" : "y");
                    var d = "x" === i ? s.outerWidth(!1) - l.width() : s.outerHeight(!1) - l.height(),
                        p = "x" === i ? s[0].offsetLeft : s[0].offsetTop,
                        f = "x" === i ? "left" : "top";
                    switch (c) {
                        case "function":
                            return t();
                        case "object":
                            var m = t.jquery ? t : e(t);
                            if (!m.length) return;
                            return "x" === i ? ae(m)[1] : ae(m)[0];
                        case "string":
                        case "number":
                            if (ie(t)) return Math.abs(t);
                            if (-1 !== t.indexOf("%")) return Math.abs(d * parseInt(t) / 100);
                            if (-1 !== t.indexOf("-=")) return Math.abs(p - parseInt(t.split("-=")[1]));
                            if (-1 !== t.indexOf("+=")) {
                                var v = p + parseInt(t.split("+=")[1]);
                                return v >= 0 ? 0 : Math.abs(v);
                            }
                            if (-1 !== t.indexOf("px") && ie(t.split("px")[0])) return Math.abs(t.split("px")[0]);
                            if ("top" === t || "left" === t) return 0;
                            if ("bottom" === t) return Math.abs(l.height() - s.outerHeight(!1));
                            if ("right" === t) return Math.abs(l.width() - s.outerWidth(!1));
                            if ("first" === t || "last" === t) {
                                var m = s.find(":" + t);
                                return "x" === i ? ae(m)[1] : ae(m)[0];
                            }
                            return e(t).length ? "x" === i ? ae(e(t))[1] : ae(e(t))[0] : (s.css(f, t), void u.update.call(null, n[0]));
                    }
                }
            },
            X = function(t) {
                function i() {
                    return clearTimeout(p[0].autoUpdate), 0 === s.parents("html").length ? void(s = null) : void(p[0].autoUpdate = setTimeout(function() {
                        return c.advanced.updateOnSelectorChange && (l.poll.change.n = o(), l.poll.change.n !== l.poll.change.o) ? (l.poll.change.o = l.poll.change.n, void r(3)) : c.advanced.updateOnContentResize && (l.poll.size.n = s[0].scrollHeight + s[0].scrollWidth + p[0].offsetHeight + s[0].offsetHeight + s[0].offsetWidth, l.poll.size.n !== l.poll.size.o) ? (l.poll.size.o = l.poll.size.n, void r(1)) : !c.advanced.updateOnImageLoad || "auto" === c.advanced.updateOnImageLoad && "y" === c.axis || (l.poll.img.n = p.find("img").length, l.poll.img.n === l.poll.img.o) ? void((c.advanced.updateOnSelectorChange || c.advanced.updateOnContentResize || c.advanced.updateOnImageLoad) && i()) : (l.poll.img.o = l.poll.img.n, void p.find("img").each(function() {
                            n(this);
                        }));
                    }, c.advanced.autoUpdateTimeout));
                }

                function n(t) {
                    function i(e, t) {
                        return function() {
                            return t.apply(e, arguments);
                        };
                    }

                    function a() {
                        this.onload = null, e(t).addClass(d[2]), r(2);
                    }
                    if (e(t).hasClass(d[2])) return void r();
                    var n = new Image();
                    n.onload = i(n, a), n.src = t.src;
                }

                function o() {
                    c.advanced.updateOnSelectorChange === !0 && (c.advanced.updateOnSelectorChange = "*");
                    var e = 0,
                        t = p.find(c.advanced.updateOnSelectorChange);
                    return c.advanced.updateOnSelectorChange && t.length > 0 && t.each(function() {
                        e += this.offsetHeight + this.offsetWidth;
                    }), e;
                }

                function r(e) {
                    clearTimeout(p[0].autoUpdate), u.update.call(null, s[0], e);
                }
                var s = e(this),
                    l = s.data(a),
                    c = l.opt,
                    p = e("#mCSB_" + l.idx + "_container");
                return t ? (clearTimeout(p[0].autoUpdate), void G(p[0], "autoUpdate")) : void i();
            },
            J = function(e, t, i) {
                return Math.round(e / t) * t - i;
            },
            $ = function(t) {
                var i = t.data(a),
                    n = e("#mCSB_" + i.idx + "_container,#mCSB_" + i.idx + "_container_wrapper,#mCSB_" + i.idx + "_dragger_vertical,#mCSB_" + i.idx + "_dragger_horizontal");
                n.each(function() {
                    V.call(this);
                });
            },
            Z = function(t, i, n) {
                function o(e) {
                    return l && c.callbacks[e] && "function" == typeof c.callbacks[e];
                }

                function r() {
                    return [c.callbacks.alwaysTriggerOffsets || x >= w[0] + S, c.callbacks.alwaysTriggerOffsets || -k >= x];
                }

                function s() {
                    var e = [f[0].offsetTop, f[0].offsetLeft],
                        i = [y[0].offsetTop, y[0].offsetLeft],
                        a = [f.outerHeight(!1), f.outerWidth(!1)],
                        o = [p.height(), p.width()];
                    t[0].mcs = {
                        content: f,
                        top: e[0],
                        left: e[1],
                        draggerTop: i[0],
                        draggerLeft: i[1],
                        topPct: Math.round(100 * Math.abs(e[0]) / (Math.abs(a[0]) - o[0])),
                        leftPct: Math.round(100 * Math.abs(e[1]) / (Math.abs(a[1]) - o[1])),
                        direction: n.dir
                    };
                }
                var l = t.data(a),
                    c = l.opt,
                    d = {
                        trigger: "internal",
                        dir: "y",
                        scrollEasing: "mcsEaseOut",
                        drag: !1,
                        dur: c.scrollInertia,
                        overwrite: "all",
                        callbacks: !0,
                        onStart: !0,
                        onUpdate: !0,
                        onComplete: !0
                    },
                    n = e.extend(d, n),
                    u = [n.dur, n.drag ? 0 : n.dur],
                    p = e("#mCSB_" + l.idx),
                    f = e("#mCSB_" + l.idx + "_container"),
                    m = f.parent(),
                    v = c.callbacks.onTotalScrollOffset ? U.call(t, c.callbacks.onTotalScrollOffset) : [0, 0],
                    h = c.callbacks.onTotalScrollBackOffset ? U.call(t, c.callbacks.onTotalScrollBackOffset) : [0, 0];
                if (l.trigger = n.trigger, 0 === m.scrollTop() && 0 === m.scrollLeft() || (e(".mCSB_" + l.idx + "_scrollbar").css("visibility", "visible"), m.scrollTop(0).scrollLeft(0)), "_resetY" !== i || l.contentReset.y || (o("onOverflowYNone") && c.callbacks.onOverflowYNone.call(t[0]), l.contentReset.y = 1), "_resetX" !== i || l.contentReset.x || (o("onOverflowXNone") && c.callbacks.onOverflowXNone.call(t[0]), l.contentReset.x = 1), "_resetY" !== i && "_resetX" !== i) {
                    if (!l.contentReset.y && t[0].mcs || !l.overflowed[0] || (o("onOverflowY") && c.callbacks.onOverflowY.call(t[0]), l.contentReset.x = null), !l.contentReset.x && t[0].mcs || !l.overflowed[1] || (o("onOverflowX") && c.callbacks.onOverflowX.call(t[0]), l.contentReset.x = null), c.snapAmount) {
                        var g = c.snapAmount instanceof Array ? "x" === n.dir ? c.snapAmount[1] : c.snapAmount[0] : c.snapAmount;
                        i = J(i, g, c.snapOffset);
                    }
                    switch (n.dir) {
                        case "x":
                            var y = e("#mCSB_" + l.idx + "_dragger_horizontal"),
                                b = "left",
                                x = f[0].offsetLeft,
                                w = [p.width() - f.outerWidth(!1), y.parent().width() - y.width()],
                                _ = [i, 0 === i ? 0 : i / l.scrollRatio.x],
                                S = v[1],
                                k = h[1],
                                T = S > 0 ? S / l.scrollRatio.x : 0,
                                B = k > 0 ? k / l.scrollRatio.x : 0;
                            break;
                        case "y":
                            var y = e("#mCSB_" + l.idx + "_dragger_vertical"),
                                b = "top",
                                x = f[0].offsetTop,
                                w = [p.height() - f.outerHeight(!1), y.parent().height() - y.height()],
                                _ = [i, 0 === i ? 0 : i / l.scrollRatio.y],
                                S = v[0],
                                k = h[0],
                                T = S > 0 ? S / l.scrollRatio.y : 0,
                                B = k > 0 ? k / l.scrollRatio.y : 0;
                    }
                    _[1] < 0 || 0 === _[0] && 0 === _[1] ? _ = [0, 0] : _[1] >= w[1] ? _ = [w[0], w[1]] : _[0] = -_[0],
                        t[0].mcs || (s(), o("onInit") && c.callbacks.onInit.call(t[0])), clearTimeout(f[0].onCompleteTimeout),
                        K(y[0], b, Math.round(_[1]), u[1], n.scrollEasing), !l.tweenRunning && (0 === x && _[0] >= 0 || x === w[0] && _[0] <= w[0]) || K(f[0], b, Math.round(_[0]), u[0], n.scrollEasing, n.overwrite, {
                            onStart: function() {
                                n.callbacks && n.onStart && !l.tweenRunning && (o("onScrollStart") && (s(), c.callbacks.onScrollStart.call(t[0])), l.tweenRunning = !0, C(y), l.cbOffsets = r());
                            },
                            onUpdate: function() {
                                n.callbacks && n.onUpdate && o("whileScrolling") && (s(), c.callbacks.whileScrolling.call(t[0]));
                            },
                            onComplete: function() {
                                if (n.callbacks && n.onComplete) {
                                    "yx" === c.axis && clearTimeout(f[0].onCompleteTimeout);
                                    var e = f[0].idleTimer || 0;
                                    f[0].onCompleteTimeout = setTimeout(function() {
                                        o("onScroll") && (s(), c.callbacks.onScroll.call(t[0])), o("onTotalScroll") && _[1] >= w[1] - T && l.cbOffsets[0] && (s(), c.callbacks.onTotalScroll.call(t[0])), o("onTotalScrollBack") && _[1] <= B && l.cbOffsets[1] && (s(), c.callbacks.onTotalScrollBack.call(t[0])), l.tweenRunning = !1, f[0].idleTimer = 0,
                                            C(y, "hide");
                                    }, e);
                                }
                            }
                        });
                }
            },
            K = function(e, t, i, a, n, o, r) {
                function s() {
                    w.stop || (y || m.call(), y = Q() - g, l(), y >= w.time && (w.time = y > w.time ? y + p - (y - w.time) : y + p - 1, w.time < y + 1 && (w.time = y + 1)), w.time < a ? w.id = f(s) : h.call());
                }

                function l() {
                    a > 0 ? (w.currVal = u(w.time, b, _, a, n), x[t] = Math.round(w.currVal) + "px") : x[t] = i + "px",
                        v.call();
                }

                function c() {
                    p = 1e3 / 60, w.time = y + p, f = window.requestAnimationFrame ? window.requestAnimationFrame : function(e) {
                        return l(), setTimeout(e, .01);
                    }, w.id = f(s);
                }

                function d() {
                    null != w.id && (window.requestAnimationFrame ? window.cancelAnimationFrame(w.id) : clearTimeout(w.id), w.id = null);
                }

                function u(e, t, i, a, n) {
                    switch (n) {
                        case "linear":
                        case "mcsLinear":
                            return i * e / a + t;
                        case "mcsLinearOut":
                            return e /= a, e--, i * Math.sqrt(1 - e * e) + t;
                        case "easeInOutSmooth":
                            return e /= a / 2, 1 > e ? i / 2 * e * e + t : (e--, -i / 2 * (e * (e - 2) - 1) + t);
                        case "easeInOutStrong":
                            return e /= a / 2, 1 > e ? i / 2 * Math.pow(2, 10 * (e - 1)) + t : (e--, i / 2 * (-Math.pow(2, -10 * e) + 2) + t);
                        case "easeInOut":
                        case "mcsEaseInOut":
                            return e /= a / 2, 1 > e ? i / 2 * e * e * e + t : (e -= 2, i / 2 * (e * e * e + 2) + t);
                        case "easeOutSmooth":
                            return e /= a, e--, -i * (e * e * e * e - 1) + t;
                        case "easeOutStrong":
                            return i * (-Math.pow(2, -10 * e / a) + 1) + t;
                        case "easeOut":
                        case "mcsEaseOut":
                        default:
                            var o = (e /= a) * e,
                                r = o * e;
                            return t + i * (.499999999999997 * r * o + -2.5 * o * o + 5.5 * r + -6.5 * o + 4 * e);
                    }
                }
                e._mTween || (e._mTween = {
                    top: {},
                    left: {}
                });
                var p, f, r = r || {},
                    m = r.onStart || function() {},
                    v = r.onUpdate || function() {},
                    h = r.onComplete || function() {},
                    g = Q(),
                    y = 0,
                    b = e.offsetTop,
                    x = e.style,
                    w = e._mTween[t];
                "left" === t && (b = e.offsetLeft);
                var _ = i - b;
                w.stop = 0, "none" !== o && d(), c();
            },
            Q = function() {
                return window.performance && window.performance.now ? window.performance.now() : window.performance && window.performance.webkitNow ? window.performance.webkitNow() : Date.now ? Date.now() : new Date().getTime();
            },
            V = function() {
                var e = this;
                e._mTween || (e._mTween = {
                    top: {},
                    left: {}
                });
                for (var t = ["top", "left"], i = 0; i < t.length; i++) {
                    var a = t[i];
                    e._mTween[a].id && (window.requestAnimationFrame ? window.cancelAnimationFrame(e._mTween[a].id) : clearTimeout(e._mTween[a].id), e._mTween[a].id = null, e._mTween[a].stop = 1);
                }
            },
            G = function(e, t) {
                try {
                    delete e[t];
                } catch (i) {
                    e[t] = null;
                }
            },
            ee = function(e) {
                return !(e.which && 1 !== e.which);
            },
            te = function(e) {
                var t = e.originalEvent.pointerType;
                return !(t && "touch" !== t && 2 !== t);
            },
            ie = function(e) {
                return !isNaN(parseFloat(e)) && isFinite(e);
            },
            ae = function(e) {
                var t = e.parents(".mCSB_container");
                return [e.offset().top - t.offset().top, e.offset().left - t.offset().left];
            },
            ne = function() {
                function e() {
                    var e = ["webkit", "moz", "ms", "o"];
                    if ("hidden" in document) return "hidden";
                    for (var t = 0; t < e.length; t++)
                        if (e[t] + "Hidden" in document) return e[t] + "Hidden";
                    return null;
                }
                var t = e();
                return t ? document[t] : !1;
            };
        e.fn[i] = function(t) {
            return u[t] ? u[t].apply(this, Array.prototype.slice.call(arguments, 1)) : "object" != typeof t && t ? void e.error("Method " + t + " does not exist") : u.init.apply(this, arguments);
        }, e[i] = function(t) {
            return u[t] ? u[t].apply(this, Array.prototype.slice.call(arguments, 1)) : "object" != typeof t && t ? void e.error("Method " + t + " does not exist") : u.init.apply(this, arguments);
        }, e[i].defaults = o, window[i] = !0, e(window).bind("load", function() {
            e(n)[i](), e.extend(e.expr[":"], {
                mcsInView: e.expr[":"].mcsInView || function(t) {
                    var i, a, n = e(t),
                        o = n.parents(".mCSB_container");
                    return o.length ? (i = o.parent(), a = [o[0].offsetTop, o[0].offsetLeft], a[0] + ae(n)[0] >= 0 && a[0] + ae(n)[0] < i.height() - n.outerHeight(!1) && a[1] + ae(n)[1] >= 0 && a[1] + ae(n)[1] < i.width() - n.outerWidth(!1)) : void 0;
                },
                mcsInSight: e.expr[":"].mcsInSight || function(t, i, a) {
                    var n, o, r, s, l = e(t),
                        c = l.parents(".mCSB_container"),
                        d = "exact" === a[3] ? [
                            [1, 0],
                            [1, 0]
                        ] : [
                            [.9, .1],
                            [.6, .4]
                        ];
                    return c.length ? (n = [l.outerHeight(!1), l.outerWidth(!1)], r = [c[0].offsetTop + ae(l)[0], c[0].offsetLeft + ae(l)[1]], o = [c.parent()[0].offsetHeight, c.parent()[0].offsetWidth], s = [n[0] < o[0] ? d[0] : d[1], n[1] < o[1] ? d[0] : d[1]], r[0] - o[0] * s[0][0] < 0 && r[0] + n[0] - o[0] * s[0][1] >= 0 && r[1] - o[1] * s[1][0] < 0 && r[1] + n[1] - o[1] * s[1][1] >= 0) : void 0;
                },
                mcsOverflow: e.expr[":"].mcsOverflow || function(t) {
                    var i = e(t).data(a);
                    return i ? i.overflowed[0] || i.overflowed[1] : void 0;
                }
            });
        });
    });
}),
! function() {
    "use strict";

    function e(i) {
        return void 0 === this || Object.getPrototypeOf(this) !== e.prototype ? new e(i) : (S = this, S.version = "3.3.1", S.tools = new C(), S.isSupported() ? (S.tools.extend(S.defaults, i || {}), t(S.defaults), S.store = {
            elements: {},
            containers: []
        }, S.sequences = {}, S.history = [], S.uid = 0, S.initialized = !1) : "undefined" != typeof console && null !== console, S);
    }

    function t(e) {
        if (e && e.container) {
            if ("string" == typeof e.container) return window.document.documentElement.querySelector(e.container);
            if (S.tools.isNode(e.container)) return e.container;
        }
        return S.defaults.container;
    }

    function i(e, t) {
        return "string" == typeof e ? Array.prototype.slice.call(t.querySelectorAll(e)) : S.tools.isNode(e) ? [e] : S.tools.isNodeList(e) ? Array.prototype.slice.call(e) : [];
    }

    function a() {
        return ++S.uid;
    }

    function n(e, t, i) {
        t.container && (t.container = i), e.config ? e.config = S.tools.extendClone(e.config, t) : e.config = S.tools.extendClone(S.defaults, t), "top" === e.config.origin || "bottom" === e.config.origin ? e.config.axis = "Y" : e.config.axis = "X";
    }

    function o(e) {
        var t = window.getComputedStyle(e.domEl);
        e.styles || (e.styles = {
                transition: {},
                transform: {},
                computed: {}
            }, e.styles.inline = e.domEl.getAttribute("style") || "", e.styles.inline += "; visibility: visible; ", e.styles.computed.opacity = t.opacity, t.transition && "all 0s ease 0s" !== t.transition ? e.styles.computed.transition = t.transition + ", " : e.styles.computed.transition = ""),
            e.styles.transition.instant = r(e, 0), e.styles.transition.delayed = r(e, e.config.delay),
            e.styles.transform.initial = " -webkit-transform:", e.styles.transform.target = " -webkit-transform:",
            s(e), e.styles.transform.initial += "transform:", e.styles.transform.target += "transform:",
            s(e);
    }

    function r(e, t) {
        var i = e.config;
        return "-webkit-transition: " + e.styles.computed.transition + "-webkit-transform " + i.duration / 1e3 + "s " + i.easing + " " + t / 1e3 + "s, opacity " + i.duration / 1e3 + "s " + i.easing + " " + t / 1e3 + "s; transition: " + e.styles.computed.transition + "transform " + i.duration / 1e3 + "s " + i.easing + " " + t / 1e3 + "s, opacity " + i.duration / 1e3 + "s " + i.easing + " " + t / 1e3 + "s; ";
    }

    function s(e) {
        var t, i = e.config,
            a = e.styles.transform;
        t = "top" === i.origin || "left" === i.origin ? /^-/.test(i.distance) ? i.distance.substr(1) : "-" + i.distance : i.distance,
            parseInt(i.distance) && (a.initial += " translate" + i.axis + "(" + t + ")", a.target += " translate" + i.axis + "(0)"),
            i.scale && (a.initial += " scale(" + i.scale + ")", a.target += " scale(1)"), i.rotate.x && (a.initial += " rotateX(" + i.rotate.x + "deg)", a.target += " rotateX(0)"), i.rotate.y && (a.initial += " rotateY(" + i.rotate.y + "deg)", a.target += " rotateY(0)"), i.rotate.z && (a.initial += " rotateZ(" + i.rotate.z + "deg)", a.target += " rotateZ(0)"), a.initial += "; opacity: " + i.opacity + ";", a.target += "; opacity: " + e.styles.computed.opacity + ";";
    }

    function l(e) {
        var t = e.config.container;
        t && -1 === S.store.containers.indexOf(t) && S.store.containers.push(e.config.container),
            S.store.elements[e.id] = e;
    }

    function c(e, t, i) {
        var a = {
            target: e,
            config: t,
            interval: i
        };
        S.history.push(a);
    }

    function d() {
        if (S.isSupported()) {
            f();
            for (var e = 0; e < S.store.containers.length; e++) S.store.containers[e].addEventListener("scroll", u),
                S.store.containers[e].addEventListener("resize", u);
            S.initialized || (window.addEventListener("scroll", u), window.addEventListener("resize", u), S.initialized = !0);
        }
        return S;
    }

    function u() {
        k(f);
    }

    function p() {
        var e, t, i, a;
        S.tools.forOwn(S.sequences, function(n) {
            a = S.sequences[n], e = !1;
            for (var o = 0; o < a.elemIds.length; o++) i = a.elemIds[o], t = S.store.elements[i],
                _(t) && !e && (e = !0);
            a.active = e;
        });
    }

    function f() {
        var e, t;
        p(), S.tools.forOwn(S.store.elements, function(i) {
            t = S.store.elements[i], e = g(t), h(t) ? (t.config.beforeReveal(t.domEl), e ? t.domEl.setAttribute("style", t.styles.inline + t.styles.transform.target + t.styles.transition.delayed) : t.domEl.setAttribute("style", t.styles.inline + t.styles.transform.target + t.styles.transition.instant), v("reveal", t, e), t.revealing = !0, t.seen = !0, t.sequence && m(t, e)) : y(t) && (t.config.beforeReset(t.domEl), t.domEl.setAttribute("style", t.styles.inline + t.styles.transform.initial + t.styles.transition.instant), v("reset", t), t.revealing = !1);
        });
    }

    function m(e, t) {
        var i = 0,
            a = 0,
            n = S.sequences[e.sequence.id];
        n.blocked = !0, t && "onload" === e.config.useDelay && (a = e.config.delay), e.sequence.timer && (i = Math.abs(e.sequence.timer.started - new Date()), window.clearTimeout(e.sequence.timer)), e.sequence.timer = {
            started: new Date()
        }, e.sequence.timer.clock = window.setTimeout(function() {
            n.blocked = !1, e.sequence.timer = null, u();
        }, Math.abs(n.interval) + a - i);
    }

    function v(e, t, i) {
        var a = 0,
            n = 0,
            o = "after";
        switch (e) {
            case "reveal":
                n = t.config.duration, i && (n += t.config.delay), o += "Reveal";
                break;
            case "reset":
                n = t.config.duration, o += "Reset";
        }
        t.timer && (a = Math.abs(t.timer.started - new Date()), window.clearTimeout(t.timer.clock)),
            t.timer = {
                started: new Date()
            }, t.timer.clock = window.setTimeout(function() {
                t.config[o](t.domEl), t.timer = null;
            }, n - a);
    }

    function h(e) {
        if (e.sequence) {
            var t = S.sequences[e.sequence.id];
            return t.active && !t.blocked && !e.revealing && !e.disabled;
        }
        return _(e) && !e.revealing && !e.disabled;
    }

    function g(e) {
        var t = e.config.useDelay;
        return "always" === t || "onload" === t && !S.initialized || "once" === t && !e.seen;
    }

    function y(e) {
        if (e.sequence) {
            var t = S.sequences[e.sequence.id];
            return !t.active && e.config.reset && e.revealing && !e.disabled;
        }
        return !_(e) && e.config.reset && e.revealing && !e.disabled;
    }

    function b(e) {
        return {
            width: e.clientWidth,
            height: e.clientHeight
        };
    }

    function x(e) {
        if (e && e !== window.document.documentElement) {
            var t = w(e);
            return {
                x: e.scrollLeft + t.left,
                y: e.scrollTop + t.top
            };
        }
        return {
            x: window.pageXOffset,
            y: window.pageYOffset
        };
    }

    function w(e) {
        var t = 0,
            i = 0,
            a = e.offsetHeight,
            n = e.offsetWidth;
        do isNaN(e.offsetTop) || (t += e.offsetTop), isNaN(e.offsetLeft) || (i += e.offsetLeft),
            e = e.offsetParent; while (e);
        return {
            top: t,
            left: i,
            height: a,
            width: n
        };
    }

    function _(e) {
        function t() {
            var t = c + s * r,
                i = d + l * r,
                a = u - s * r,
                f = p - l * r,
                m = o.y + e.config.viewOffset.top,
                v = o.x + e.config.viewOffset.left,
                h = o.y - e.config.viewOffset.bottom + n.height,
                g = o.x - e.config.viewOffset.right + n.width;
            return h > t && a > m && i > v && g > f;
        }

        function i() {
            return "fixed" === window.getComputedStyle(e.domEl).position;
        }
        var a = w(e.domEl),
            n = b(e.config.container),
            o = x(e.config.container),
            r = e.config.viewFactor,
            s = a.height,
            l = a.width,
            c = a.top,
            d = a.left,
            u = c + s,
            p = d + l;
        return t() || i();
    }

    function C() {}
    var S, k;
    e.prototype.defaults = {
        origin: "bottom",
        distance: "20px",
        duration: 500,
        delay: 0,
        rotate: {
            x: 0,
            y: 0,
            z: 0
        },
        opacity: 0,
        scale: .9,
        easing: "cubic-bezier(0.6, 0.2, 0.1, 1)",
        container: window.document.documentElement,
        mobile: !0,
        reset: !1,
        useDelay: "always",
        viewFactor: .2,
        viewOffset: {
            top: 0,
            right: 0,
            bottom: 0,
            left: 0
        },
        beforeReveal: function(e) {},
        afterReveal: function(e) {},
        beforeReset: function(e) {},
        afterReset: function(e) {}
    }, e.prototype.isSupported = function() {
        var e = document.documentElement.style;
        return "WebkitTransition" in e && "WebkitTransform" in e || "transition" in e && "transform" in e;
    }, e.prototype.reveal = function(e, r, s, u) {
        var p, f, m, v, h, g;
        if (void 0 !== r && "number" == typeof r ? (s = r, r = {}) : void 0 !== r && null !== r || (r = {}), p = t(r), f = i(e, p), !f.length) return S;
        s && "number" == typeof s && (g = a(), h = S.sequences[g] = {
            id: g,
            interval: s,
            elemIds: [],
            active: !1
        });
        for (var y = 0; y < f.length; y++) v = f[y].getAttribute("data-sr-id"), v ? m = S.store.elements[v] : (m = {
            id: a(),
            domEl: f[y],
            seen: !1,
            revealing: !1
        }, m.domEl.setAttribute("data-sr-id", m.id)), h && (m.sequence = {
            id: h.id,
            index: h.elemIds.length
        }, h.elemIds.push(m.id)), n(m, r, p), o(m), l(m), S.tools.isMobile() && !m.config.mobile || !S.isSupported() ? (m.domEl.setAttribute("style", m.styles.inline), m.disabled = !0) : m.revealing || m.domEl.setAttribute("style", m.styles.inline + m.styles.transform.initial);
        return !u && S.isSupported() && (c(e, r, s), S.initTimeout && window.clearTimeout(S.initTimeout), S.initTimeout = window.setTimeout(d, 0)), S;
    }, e.prototype.sync = function() {
        if (S.history.length && S.isSupported()) {
            for (var e = 0; e < S.history.length; e++) {
                var t = S.history[e];
                S.reveal(t.target, t.config, t.interval, !0);
            }
            d();
        }
        return S;
    }, C.prototype.isObject = function(e) {
        return null !== e && "object" == typeof e && e.constructor === Object;
    }, C.prototype.isNode = function(e) {
        return "object" == typeof window.Node ? e instanceof window.Node : e && "object" == typeof e && "number" == typeof e.nodeType && "string" == typeof e.nodeName;
    }, C.prototype.isNodeList = function(e) {
        var t = Object.prototype.toString.call(e),
            i = /^\[object (HTMLCollection|NodeList|Object)\]$/;
        return "object" == typeof window.NodeList ? e instanceof window.NodeList : e && "object" == typeof e && i.test(t) && "number" == typeof e.length && (0 === e.length || this.isNode(e[0]));
    }, C.prototype.forOwn = function(e, t) {
        if (!this.isObject(e)) throw new TypeError('Expected "object", but received "' + typeof e + '".');
        for (var i in e) e.hasOwnProperty(i) && t(i);
    }, C.prototype.extend = function(e, t) {
        return this.forOwn(t, function(i) {
            this.isObject(t[i]) ? (e[i] && this.isObject(e[i]) || (e[i] = {}), this.extend(e[i], t[i])) : e[i] = t[i];
        }.bind(this)), e;
    }, C.prototype.extendClone = function(e, t) {
        return this.extend(this.extend({}, e), t);
    }, C.prototype.isMobile = function() {
        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);
    }, k = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || function(e) {
        window.setTimeout(e, 1e3 / 60);
    }, "function" == typeof define && "object" == typeof define.amd && define.amd ? define(function() {
        return e;
    }) : "undefined" != typeof module && module.exports ? module.exports = e : window.ScrollReveal = e;
}();
var spinner = {
        index: 0,
        auto: function(e) {
            void 0 != e ? spinner.index = e % spinner.quotes.length : spinner.index = (spinner.index + 1) % spinner.quotes.length,
                spinner.quotes.removeClass("show"), $(spinner.quotes[spinner.index]).addClass("show"),
                spinner.dots.removeClass("dot-fill"), $(spinner.dots[spinner.index]).addClass("dot-fill");
        },
        initial: function() {
            this.quotes = $(".quote-rotate");
            var e = this.quotes;
            this.images = $(".quote-image");
            var t = 0,
                a = $(".quote-contain");
            for (setMaxHeight = function() {
                    for (t = 0, i = 0; i < e.length; i++) e[i].offsetHeight > t && (t = e[i].offsetHeight);
                    a.css("height", t);
                }, setMaxHeight(), $(window).resize(function() {
                    setMaxHeight();
                }), spinner.quotes.first().addClass("show"), i = 0; i < spinner.quotes.length; i++) $(".quote-dots").append('<div class="nav-dot"></div>');
            this.dots = $(".nav-dot"), $(spinner.dots).first().addClass("dot-fill");
        },
        dotnav: function() {
            $(spinner.dots).on("click", function() {
                var e = $(spinner.dots).index(this);
                spinner.auto(e), window.clearInterval(interval), interval = window.setInterval(spinner.auto, 6500);
            });
        }
    },
    pJS = function(e, t) {
        var i = document.querySelector("#" + e + " > .particles-js-canvas-el");
        this.pJS = {
            canvas: {
                el: i,
                w: i.offsetWidth,
                h: i.offsetHeight
            },
            particles: {
                number: {
                    value: 400,
                    density: {
                        enable: !0,
                        value_area: 800
                    }
                },
                color: {
                    value: "#fff"
                },
                shape: {
                    type: "circle",
                    stroke: {
                        width: 0,
                        color: "#ff0000"
                    },
                    polygon: {
                        nb_sides: 5
                    },
                    image: {
                        src: "",
                        width: 100,
                        height: 100
                    }
                },
                opacity: {
                    value: 1,
                    random: !1,
                    anim: {
                        enable: !1,
                        speed: 2,
                        opacity_min: 0,
                        sync: !1
                    }
                },
                size: {
                    value: 20,
                    random: !1,
                    anim: {
                        enable: !1,
                        speed: 20,
                        size_min: 0,
                        sync: !1
                    }
                },
                line_linked: {
                    enable: !0,
                    distance: 100,
                    color: "#fff",
                    opacity: 1,
                    width: 1
                },
                move: {
                    enable: !0,
                    speed: 2,
                    direction: "none",
                    random: !1,
                    straight: !1,
                    out_mode: "out",
                    bounce: !1,
                    attract: {
                        enable: !1,
                        rotateX: 3e3,
                        rotateY: 3e3
                    }
                },
                array: []
            },
            interactivity: {
                detect_on: "canvas",
                events: {
                    onhover: {
                        enable: !0,
                        mode: "grab"
                    },
                    onclick: {
                        enable: !0,
                        mode: "push"
                    },
                    resize: !0
                },
                modes: {
                    grab: {
                        distance: 100,
                        line_linked: {
                            opacity: 1
                        }
                    },
                    bubble: {
                        distance: 200,
                        size: 80,
                        duration: .4
                    },
                    repulse: {
                        distance: 200,
                        duration: .4
                    },
                    push: {
                        particles_nb: 4
                    },
                    remove: {
                        particles_nb: 2
                    }
                },
                mouse: {}
            },
            retina_detect: !1,
            fn: {
                interact: {},
                modes: {},
                vendors: {}
            },
            tmp: {}
        };
        var a = this.pJS;
        t && Object.deepExtend(a, t), a.tmp.obj = {
            size_value: a.particles.size.value,
            size_anim_speed: a.particles.size.anim.speed,
            move_speed: a.particles.move.speed,
            line_linked_distance: a.particles.line_linked.distance,
            line_linked_width: a.particles.line_linked.width,
            mode_grab_distance: a.interactivity.modes.grab.distance,
            mode_bubble_distance: a.interactivity.modes.bubble.distance,
            mode_bubble_size: a.interactivity.modes.bubble.size,
            mode_repulse_distance: a.interactivity.modes.repulse.distance
        }, a.fn.retinaInit = function() {
            a.retina_detect && window.devicePixelRatio > 1 ? (a.canvas.pxratio = window.devicePixelRatio, a.tmp.retina = !0) : (a.canvas.pxratio = 1, a.tmp.retina = !1), a.canvas.w = a.canvas.el.offsetWidth * a.canvas.pxratio,
                a.canvas.h = a.canvas.el.offsetHeight * a.canvas.pxratio, a.particles.size.value = a.tmp.obj.size_value * a.canvas.pxratio,
                a.particles.size.anim.speed = a.tmp.obj.size_anim_speed * a.canvas.pxratio, a.particles.move.speed = a.tmp.obj.move_speed * a.canvas.pxratio,
                a.particles.line_linked.distance = a.tmp.obj.line_linked_distance * a.canvas.pxratio,
                a.interactivity.modes.grab.distance = a.tmp.obj.mode_grab_distance * a.canvas.pxratio,
                a.interactivity.modes.bubble.distance = a.tmp.obj.mode_bubble_distance * a.canvas.pxratio,
                a.particles.line_linked.width = a.tmp.obj.line_linked_width * a.canvas.pxratio,
                a.interactivity.modes.bubble.size = a.tmp.obj.mode_bubble_size * a.canvas.pxratio,
                a.interactivity.modes.repulse.distance = a.tmp.obj.mode_repulse_distance * a.canvas.pxratio;
        }, a.fn.canvasInit = function() {
            a.canvas.ctx = a.canvas.el.getContext("2d");
        }, a.fn.canvasSize = function() {
            a.canvas.el.width = a.canvas.w, a.canvas.el.height = a.canvas.h, a && a.interactivity.events.resize && window.addEventListener("resize", function() {
                a.canvas.w = a.canvas.el.offsetWidth, a.canvas.h = a.canvas.el.offsetHeight, a.tmp.retina && (a.canvas.w *= a.canvas.pxratio, a.canvas.h *= a.canvas.pxratio), a.canvas.el.width = a.canvas.w, a.canvas.el.height = a.canvas.h,
                    a.particles.move.enable || (a.fn.particlesEmpty(), a.fn.particlesCreate(), a.fn.particlesDraw(), a.fn.vendors.densityAutoParticles()), a.fn.vendors.densityAutoParticles();
            });
        }, a.fn.canvasPaint = function() {
            a.canvas.ctx.fillRect(0, 0, a.canvas.w, a.canvas.h);
        }, a.fn.canvasClear = function() {
            a.canvas.ctx.clearRect(0, 0, a.canvas.w, a.canvas.h);
        }, a.fn.particle = function(e, t, i) {
            if (this.radius = (a.particles.size.random ? Math.random() : 1) * a.particles.size.value, a.particles.size.anim.enable && (this.size_status = !1, this.vs = a.particles.size.anim.speed / 100, a.particles.size.anim.sync || (this.vs = this.vs * Math.random())), this.x = i ? i.x : Math.random() * a.canvas.w, this.y = i ? i.y : Math.random() * a.canvas.h, this.x > a.canvas.w - 2 * this.radius ? this.x = this.x - this.radius : this.x < 2 * this.radius && (this.x = this.x + this.radius), this.y > a.canvas.h - 2 * this.radius ? this.y = this.y - this.radius : this.y < 2 * this.radius && (this.y = this.y + this.radius), a.particles.move.bounce && a.fn.vendors.checkOverlap(this, i), this.color = {}, "object" == typeof e.value)
                if (e.value instanceof Array) {
                    var n = e.value[Math.floor(Math.random() * a.particles.color.value.length)];
                    this.color.rgb = hexToRgb(n);
                } else void 0 != e.value.r && void 0 != e.value.g && void 0 != e.value.b && (this.color.rgb = {
                    r: e.value.r,
                    g: e.value.g,
                    b: e.value.b
                }), void 0 != e.value.h && void 0 != e.value.s && void 0 != e.value.l && (this.color.hsl = {
                    h: e.value.h,
                    s: e.value.s,
                    l: e.value.l
                });
            else "random" == e.value ? this.color.rgb = {
                r: Math.floor(256 * Math.random()) + 0,
                g: Math.floor(256 * Math.random()) + 0,
                b: Math.floor(256 * Math.random()) + 0
            } : "string" == typeof e.value && (this.color = e, this.color.rgb = hexToRgb(this.color.value));
            this.opacity = (a.particles.opacity.random ? Math.random() : 1) * a.particles.opacity.value,
                a.particles.opacity.anim.enable && (this.opacity_status = !1, this.vo = a.particles.opacity.anim.speed / 100, a.particles.opacity.anim.sync || (this.vo = this.vo * Math.random()));
            var o = {};
            switch (a.particles.move.direction) {
                case "top":
                    o = {
                        x: 0,
                        y: -1
                    };
                    break;
                case "top-right":
                    o = {
                        x: .5,
                        y: -.5
                    };
                    break;
                case "right":
                    o = {
                        x: 1,
                        y: -0
                    };
                    break;
                case "bottom-right":
                    o = {
                        x: .5,
                        y: .5
                    };
                    break;
                case "bottom":
                    o = {
                        x: 0,
                        y: 1
                    };
                    break;
                case "bottom-left":
                    o = {
                        x: -.5,
                        y: 1
                    };
                    break;
                case "left":
                    o = {
                        x: -1,
                        y: 0
                    };
                    break;
                case "top-left":
                    o = {
                        x: -.5,
                        y: -.5
                    };
                    break;
                default:
                    o = {
                        x: 0,
                        y: 0
                    };
            }
            a.particles.move.straight ? (this.vx = o.x, this.vy = o.y, a.particles.move.random && (this.vx = this.vx * Math.random(), this.vy = this.vy * Math.random())) : (this.vx = o.x + Math.random() - .5, this.vy = o.y + Math.random() - .5),
                this.vx_i = this.vx, this.vy_i = this.vy;
            var r = a.particles.shape.type;
            if ("object" == typeof r) {
                if (r instanceof Array) {
                    var s = r[Math.floor(Math.random() * r.length)];
                    this.shape = s;
                }
            } else this.shape = r;
            if ("image" == this.shape) {
                var l = a.particles.shape;
                this.img = {
                    src: l.image.src,
                    ratio: l.image.width / l.image.height
                }, this.img.ratio || (this.img.ratio = 1), "svg" == a.tmp.img_type && void 0 != a.tmp.source_svg && (a.fn.vendors.createSvgImg(this), a.tmp.pushing && (this.img.loaded = !1));
            }
        }, a.fn.particle.prototype.draw = function() {
            function e() {
                a.canvas.ctx.drawImage(r, t.x - i, t.y - i, 2 * i, 2 * i / t.img.ratio);
            }
            var t = this;
            if (void 0 != t.radius_bubble) var i = t.radius_bubble;
            else var i = t.radius;
            if (void 0 != t.opacity_bubble) var n = t.opacity_bubble;
            else var n = t.opacity;
            if (t.color.rgb) var o = "rgba(" + t.color.rgb.r + "," + t.color.rgb.g + "," + t.color.rgb.b + "," + n + ")";
            else var o = "hsla(" + t.color.hsl.h + "," + t.color.hsl.s + "%," + t.color.hsl.l + "%," + n + ")";
            switch (a.canvas.ctx.fillStyle = o, a.canvas.ctx.beginPath(), t.shape) {
                case "circle":
                    a.canvas.ctx.arc(t.x, t.y, i, 0, 2 * Math.PI, !1);
                    break;
                case "edge":
                    a.canvas.ctx.rect(t.x - i, t.y - i, 2 * i, 2 * i);
                    break;
                case "triangle":
                    a.fn.vendors.drawShape(a.canvas.ctx, t.x - i, t.y + i / 1.66, 2 * i, 3, 2);
                    break;
                case "polygon":
                    a.fn.vendors.drawShape(a.canvas.ctx, t.x - i / (a.particles.shape.polygon.nb_sides / 3.5), t.y - i / .76, 2.66 * i / (a.particles.shape.polygon.nb_sides / 3), a.particles.shape.polygon.nb_sides, 1);
                    break;
                case "star":
                    a.fn.vendors.drawShape(a.canvas.ctx, t.x - 2 * i / (a.particles.shape.polygon.nb_sides / 4), t.y - i / 1.52, 2 * i * 2.66 / (a.particles.shape.polygon.nb_sides / 3), a.particles.shape.polygon.nb_sides, 2);
                    break;
                case "image":
                    if ("svg" == a.tmp.img_type) var r = t.img.obj;
                    else var r = a.tmp.img_obj;
                    r && e();
            }
            a.canvas.ctx.closePath(), a.particles.shape.stroke.width > 0 && (a.canvas.ctx.strokeStyle = a.particles.shape.stroke.color, a.canvas.ctx.lineWidth = a.particles.shape.stroke.width, a.canvas.ctx.stroke()),
                a.canvas.ctx.fill();
        }, a.fn.particlesCreate = function() {
            for (var e = 0; e < a.particles.number.value; e++) a.particles.array.push(new a.fn.particle(a.particles.color, a.particles.opacity.value));
        }, a.fn.particlesUpdate = function() {
            for (var e = 0; e < a.particles.array.length; e++) {
                var t = a.particles.array[e];
                if (a.particles.move.enable) {
                    var i = a.particles.move.speed / 2;
                    t.x += t.vx * i, t.y += t.vy * i;
                }
                if (a.particles.opacity.anim.enable && (1 == t.opacity_status ? (t.opacity >= a.particles.opacity.value && (t.opacity_status = !1), t.opacity += t.vo) : (t.opacity <= a.particles.opacity.anim.opacity_min && (t.opacity_status = !0), t.opacity -= t.vo), t.opacity < 0 && (t.opacity = 0)), a.particles.size.anim.enable && (1 == t.size_status ? (t.radius >= a.particles.size.value && (t.size_status = !1), t.radius += t.vs) : (t.radius <= a.particles.size.anim.size_min && (t.size_status = !0), t.radius -= t.vs), t.radius < 0 && (t.radius = 0)), "bounce" == a.particles.move.out_mode) var n = {
                    x_left: t.radius,
                    x_right: a.canvas.w,
                    y_top: t.radius,
                    y_bottom: a.canvas.h
                };
                else var n = {
                    x_left: -t.radius,
                    x_right: a.canvas.w + t.radius,
                    y_top: -t.radius,
                    y_bottom: a.canvas.h + t.radius
                };
                switch (t.x - t.radius > a.canvas.w ? (t.x = n.x_left, t.y = Math.random() * a.canvas.h) : t.x + t.radius < 0 && (t.x = n.x_right, t.y = Math.random() * a.canvas.h), t.y - t.radius > a.canvas.h ? (t.y = n.y_top, t.x = Math.random() * a.canvas.w) : t.y + t.radius < 0 && (t.y = n.y_bottom, t.x = Math.random() * a.canvas.w), a.particles.move.out_mode) {
                    case "bounce":
                        t.x + t.radius > a.canvas.w ? t.vx = -t.vx : t.x - t.radius < 0 && (t.vx = -t.vx),
                            t.y + t.radius > a.canvas.h ? t.vy = -t.vy : t.y - t.radius < 0 && (t.vy = -t.vy);
                }
                if (isInArray("grab", a.interactivity.events.onhover.mode) && a.fn.modes.grabParticle(t), (isInArray("bubble", a.interactivity.events.onhover.mode) || isInArray("bubble", a.interactivity.events.onclick.mode)) && a.fn.modes.bubbleParticle(t), (isInArray("repulse", a.interactivity.events.onhover.mode) || isInArray("repulse", a.interactivity.events.onclick.mode)) && a.fn.modes.repulseParticle(t), a.particles.line_linked.enable || a.particles.move.attract.enable)
                    for (var o = e + 1; o < a.particles.array.length; o++) {
                        var r = a.particles.array[o];
                        a.particles.line_linked.enable && a.fn.interact.linkParticles(t, r), a.particles.move.attract.enable && a.fn.interact.attractParticles(t, r),
                            a.particles.move.bounce && a.fn.interact.bounceParticles(t, r);
                    }
            }
        }, a.fn.particlesDraw = function() {
            a.canvas.ctx.clearRect(0, 0, a.canvas.w, a.canvas.h), a.fn.particlesUpdate();
            for (var e = 0; e < a.particles.array.length; e++) {
                var t = a.particles.array[e];
                t.draw();
            }
        }, a.fn.particlesEmpty = function() {
            a.particles.array = [];
        }, a.fn.particlesRefresh = function() {
            cancelRequestAnimFrame(a.fn.checkAnimFrame), cancelRequestAnimFrame(a.fn.drawAnimFrame),
                a.tmp.source_svg = void 0, a.tmp.img_obj = void 0, a.tmp.count_svg = 0, a.fn.particlesEmpty(),
                a.fn.canvasClear(), a.fn.vendors.start();
        }, a.fn.interact.linkParticles = function(e, t) {
            var i = e.x - t.x,
                n = e.y - t.y,
                o = Math.sqrt(i * i + n * n);
            if (o <= a.particles.line_linked.distance) {
                var r = a.particles.line_linked.opacity - o / (1 / a.particles.line_linked.opacity) / a.particles.line_linked.distance;
                if (r > 0) {
                    var s = a.particles.line_linked.color_rgb_line;
                    a.canvas.ctx.strokeStyle = "rgba(" + s.r + "," + s.g + "," + s.b + "," + r + ")",
                        a.canvas.ctx.lineWidth = a.particles.line_linked.width, a.canvas.ctx.beginPath(),
                        a.canvas.ctx.moveTo(e.x, e.y), a.canvas.ctx.lineTo(t.x, t.y), a.canvas.ctx.stroke(),
                        a.canvas.ctx.closePath();
                }
            }
        }, a.fn.interact.attractParticles = function(e, t) {
            var i = e.x - t.x,
                n = e.y - t.y,
                o = Math.sqrt(i * i + n * n);
            if (o <= a.particles.line_linked.distance) {
                var r = i / (1e3 * a.particles.move.attract.rotateX),
                    s = n / (1e3 * a.particles.move.attract.rotateY);
                e.vx -= r, e.vy -= s, t.vx += r, t.vy += s;
            }
        }, a.fn.interact.bounceParticles = function(e, t) {
            var i = e.x - t.x,
                a = e.y - t.y,
                n = Math.sqrt(i * i + a * a),
                o = e.radius + t.radius;
            o >= n && (e.vx = -e.vx, e.vy = -e.vy, t.vx = -t.vx, t.vy = -t.vy);
        }, a.fn.modes.pushParticles = function(e, t) {
            a.tmp.pushing = !0;
            for (var i = 0; e > i; i++) a.particles.array.push(new a.fn.particle(a.particles.color, a.particles.opacity.value, {
                x: t ? t.pos_x : Math.random() * a.canvas.w,
                y: t ? t.pos_y : Math.random() * a.canvas.h
            })), i == e - 1 && (a.particles.move.enable || a.fn.particlesDraw(), a.tmp.pushing = !1);
        }, a.fn.modes.removeParticles = function(e) {
            a.particles.array.splice(0, e), a.particles.move.enable || a.fn.particlesDraw();
        }, a.fn.modes.bubbleParticle = function(e) {
            function t() {
                e.opacity_bubble = e.opacity, e.radius_bubble = e.radius;
            }

            function i(t, i, n, o, s) {
                if (t != i)
                    if (a.tmp.bubble_duration_end) {
                        if (void 0 != n) {
                            var l = o - u * (o - t) / a.interactivity.modes.bubble.duration,
                                c = t - l;
                            p = t + c, "size" == s && (e.radius_bubble = p), "opacity" == s && (e.opacity_bubble = p);
                        }
                    } else if (r <= a.interactivity.modes.bubble.distance) {
                    if (void 0 != n) var d = n;
                    else var d = o;
                    if (d != t) {
                        var p = o - u * (o - t) / a.interactivity.modes.bubble.duration;
                        "size" == s && (e.radius_bubble = p), "opacity" == s && (e.opacity_bubble = p);
                    }
                } else "size" == s && (e.radius_bubble = void 0), "opacity" == s && (e.opacity_bubble = void 0);
            }
            if (a.interactivity.events.onhover.enable && isInArray("bubble", a.interactivity.events.onhover.mode)) {
                var n = e.x - a.interactivity.mouse.pos_x,
                    o = e.y - a.interactivity.mouse.pos_y,
                    r = Math.sqrt(n * n + o * o),
                    s = 1 - r / a.interactivity.modes.bubble.distance;
                if (r <= a.interactivity.modes.bubble.distance) {
                    if (s >= 0 && "mousemove" == a.interactivity.status) {
                        if (a.interactivity.modes.bubble.size != a.particles.size.value)
                            if (a.interactivity.modes.bubble.size > a.particles.size.value) {
                                var l = e.radius + a.interactivity.modes.bubble.size * s;
                                l >= 0 && (e.radius_bubble = l);
                            } else {
                                var c = e.radius - a.interactivity.modes.bubble.size,
                                    l = e.radius - c * s;
                                l > 0 ? e.radius_bubble = l : e.radius_bubble = 0;
                            }
                        if (a.interactivity.modes.bubble.opacity != a.particles.opacity.value)
                            if (a.interactivity.modes.bubble.opacity > a.particles.opacity.value) {
                                var d = a.interactivity.modes.bubble.opacity * s;
                                d > e.opacity && d <= a.interactivity.modes.bubble.opacity && (e.opacity_bubble = d);
                            } else {
                                var d = e.opacity - (a.particles.opacity.value - a.interactivity.modes.bubble.opacity) * s;
                                d < e.opacity && d >= a.interactivity.modes.bubble.opacity && (e.opacity_bubble = d);
                            }
                    }
                } else t();
                "mouseleave" == a.interactivity.status && t();
            } else if (a.interactivity.events.onclick.enable && isInArray("bubble", a.interactivity.events.onclick.mode)) {
                if (a.tmp.bubble_clicking) {
                    var n = e.x - a.interactivity.mouse.click_pos_x,
                        o = e.y - a.interactivity.mouse.click_pos_y,
                        r = Math.sqrt(n * n + o * o),
                        u = (new Date().getTime() - a.interactivity.mouse.click_time) / 1e3;
                    u > a.interactivity.modes.bubble.duration && (a.tmp.bubble_duration_end = !0), u > 2 * a.interactivity.modes.bubble.duration && (a.tmp.bubble_clicking = !1, a.tmp.bubble_duration_end = !1);
                }
                a.tmp.bubble_clicking && (i(a.interactivity.modes.bubble.size, a.particles.size.value, e.radius_bubble, e.radius, "size"), i(a.interactivity.modes.bubble.opacity, a.particles.opacity.value, e.opacity_bubble, e.opacity, "opacity"));
            }
        }, a.fn.modes.repulseParticle = function(e) {
            function t() {
                var t = Math.atan2(p, u);
                if (e.vx = m * Math.cos(t), e.vy = m * Math.sin(t), "bounce" == a.particles.move.out_mode) {
                    var i = {
                        x: e.x + e.vx,
                        y: e.y + e.vy
                    };
                    i.x + e.radius > a.canvas.w ? e.vx = -e.vx : i.x - e.radius < 0 && (e.vx = -e.vx),
                        i.y + e.radius > a.canvas.h ? e.vy = -e.vy : i.y - e.radius < 0 && (e.vy = -e.vy);
                }
            }
            if (a.interactivity.events.onhover.enable && isInArray("repulse", a.interactivity.events.onhover.mode) && "mousemove" == a.interactivity.status) {
                var i = e.x - a.interactivity.mouse.pos_x,
                    n = e.y - a.interactivity.mouse.pos_y,
                    o = Math.sqrt(i * i + n * n),
                    r = {
                        x: i / o,
                        y: n / o
                    },
                    s = a.interactivity.modes.repulse.distance,
                    l = 100,
                    c = clamp(1 / s * (-1 * Math.pow(o / s, 2) + 1) * s * l, 0, 50),
                    d = {
                        x: e.x + r.x * c,
                        y: e.y + r.y * c
                    };
                "bounce" == a.particles.move.out_mode ? (d.x - e.radius > 0 && d.x + e.radius < a.canvas.w && (e.x = d.x), d.y - e.radius > 0 && d.y + e.radius < a.canvas.h && (e.y = d.y)) : (e.x = d.x, e.y = d.y);
            } else if (a.interactivity.events.onclick.enable && isInArray("repulse", a.interactivity.events.onclick.mode))
                if (a.tmp.repulse_finish || (a.tmp.repulse_count++, a.tmp.repulse_count == a.particles.array.length && (a.tmp.repulse_finish = !0)), a.tmp.repulse_clicking) {
                    var s = Math.pow(a.interactivity.modes.repulse.distance / 6, 3),
                        u = a.interactivity.mouse.click_pos_x - e.x,
                        p = a.interactivity.mouse.click_pos_y - e.y,
                        f = u * u + p * p,
                        m = -s / f * 1;
                    s >= f && t();
                } else 0 == a.tmp.repulse_clicking && (e.vx = e.vx_i, e.vy = e.vy_i);
        }, a.fn.modes.grabParticle = function(e) {
            if (a.interactivity.events.onhover.enable && "mousemove" == a.interactivity.status) {
                var t = e.x - a.interactivity.mouse.pos_x,
                    i = e.y - a.interactivity.mouse.pos_y,
                    n = Math.sqrt(t * t + i * i);
                if (n <= a.interactivity.modes.grab.distance) {
                    var o = a.interactivity.modes.grab.line_linked.opacity - n / (1 / a.interactivity.modes.grab.line_linked.opacity) / a.interactivity.modes.grab.distance;
                    if (o > 0) {
                        var r = a.particles.line_linked.color_rgb_line;
                        a.canvas.ctx.strokeStyle = "rgba(" + r.r + "," + r.g + "," + r.b + "," + o + ")",
                            a.canvas.ctx.lineWidth = a.particles.line_linked.width, a.canvas.ctx.beginPath(),
                            a.canvas.ctx.moveTo(e.x, e.y), a.canvas.ctx.lineTo(a.interactivity.mouse.pos_x, a.interactivity.mouse.pos_y),
                            a.canvas.ctx.stroke(), a.canvas.ctx.closePath();
                    }
                }
            }
        }, a.fn.vendors.eventsListeners = function() {
            "window" == a.interactivity.detect_on ? a.interactivity.el = window : a.interactivity.el = a.canvas.el, (a.interactivity.events.onhover.enable || a.interactivity.events.onclick.enable) && (a.interactivity.el.addEventListener("mousemove", function(e) {
                if (a.interactivity.el == window) var t = e.clientX,
                    i = e.clientY;
                else var t = e.offsetX || e.clientX,
                    i = e.offsetY || e.clientY;
                a.interactivity.mouse.pos_x = t, a.interactivity.mouse.pos_y = i, a.tmp.retina && (a.interactivity.mouse.pos_x *= a.canvas.pxratio, a.interactivity.mouse.pos_y *= a.canvas.pxratio), a.interactivity.status = "mousemove";
            }), a.interactivity.el.addEventListener("mouseleave", function(e) {
                a.interactivity.mouse.pos_x = null, a.interactivity.mouse.pos_y = null, a.interactivity.status = "mouseleave";
            })), a.interactivity.events.onclick.enable && a.interactivity.el.addEventListener("click", function() {
                if (a.interactivity.mouse.click_pos_x = a.interactivity.mouse.pos_x, a.interactivity.mouse.click_pos_y = a.interactivity.mouse.pos_y, a.interactivity.mouse.click_time = new Date().getTime(), a.interactivity.events.onclick.enable) switch (a.interactivity.events.onclick.mode) {
                    case "push":
                        a.particles.move.enable ? a.fn.modes.pushParticles(a.interactivity.modes.push.particles_nb, a.interactivity.mouse) : 1 == a.interactivity.modes.push.particles_nb ? a.fn.modes.pushParticles(a.interactivity.modes.push.particles_nb, a.interactivity.mouse) : a.interactivity.modes.push.particles_nb > 1 && a.fn.modes.pushParticles(a.interactivity.modes.push.particles_nb);
                        break;
                    case "remove":
                        a.fn.modes.removeParticles(a.interactivity.modes.remove.particles_nb);
                        break;
                    case "bubble":
                        a.tmp.bubble_clicking = !0;
                        break;
                    case "repulse":
                        a.tmp.repulse_clicking = !0, a.tmp.repulse_count = 0, a.tmp.repulse_finish = !1,
                            setTimeout(function() {
                                a.tmp.repulse_clicking = !1;
                            }, 1e3 * a.interactivity.modes.repulse.duration);
                }
            });
        }, a.fn.vendors.densityAutoParticles = function() {
            if (a.particles.number.density.enable) {
                var e = a.canvas.el.width * a.canvas.el.height / 1e3;
                a.tmp.retina && (e /= 2 * a.canvas.pxratio);
                var t = e * a.particles.number.value / a.particles.number.density.value_area,
                    i = a.particles.array.length - t;
                0 > i ? a.fn.modes.pushParticles(Math.abs(i)) : a.fn.modes.removeParticles(i);
            }
        }, a.fn.vendors.checkOverlap = function(e, t) {
            for (var i = 0; i < a.particles.array.length; i++) {
                var n = a.particles.array[i],
                    o = e.x - n.x,
                    r = e.y - n.y,
                    s = Math.sqrt(o * o + r * r);
                s <= e.radius + n.radius && (e.x = t ? t.x : Math.random() * a.canvas.w, e.y = t ? t.y : Math.random() * a.canvas.h, a.fn.vendors.checkOverlap(e));
            }
        }, a.fn.vendors.createSvgImg = function(e) {
            var t = a.tmp.source_svg,
                i = /#([0-9A-F]{3,6})/gi,
                n = t.replace(i, function(t, i, a, n) {
                    if (e.color.rgb) var o = "rgba(" + e.color.rgb.r + "," + e.color.rgb.g + "," + e.color.rgb.b + "," + e.opacity + ")";
                    else var o = "hsla(" + e.color.hsl.h + "," + e.color.hsl.s + "%," + e.color.hsl.l + "%," + e.opacity + ")";
                    return o;
                }),
                o = new Blob([n], {
                    type: "image/svg+xml;charset=utf-8"
                }),
                r = window.URL || window.webkitURL || window,
                s = r.createObjectURL(o),
                l = new Image();
            l.addEventListener("load", function() {
                e.img.obj = l, e.img.loaded = !0, r.revokeObjectURL(s), a.tmp.count_svg++;
            }), l.src = s;
        }, a.fn.vendors.destroypJS = function() {
            cancelAnimationFrame(a.fn.drawAnimFrame), i.remove(), pJSDom = null;
        }, a.fn.vendors.drawShape = function(e, t, i, a, n, o) {
            var r = n * o,
                s = n / o,
                l = 180 * (s - 2) / s,
                c = Math.PI - Math.PI * l / 180;
            e.save(), e.beginPath(), e.translate(t, i), e.moveTo(0, 0);
            for (var d = 0; r > d; d++) e.lineTo(a, 0), e.translate(a, 0), e.rotate(c);
            e.fill(), e.restore();
        }, a.fn.vendors.exportImg = function() {
            window.open(a.canvas.el.toDataURL("image/png"), "_blank");
        }, a.fn.vendors.loadImg = function(e) {
            if (a.tmp.img_error = void 0, "" != a.particles.shape.image.src)
                if ("svg" == e) {
                    var t = new XMLHttpRequest();
                    t.open("GET", a.particles.shape.image.src), t.onreadystatechange = function(e) {
                        4 == t.readyState && (200 == t.status ? (a.tmp.source_svg = e.currentTarget.response, a.fn.vendors.checkBeforeDraw()) : (console.log("Error pJS - Image not found"), a.tmp.img_error = !0));
                    }, t.send();
                } else {
                    var i = new Image();
                    i.addEventListener("load", function() {
                        a.tmp.img_obj = i, a.fn.vendors.checkBeforeDraw();
                    }), i.src = a.particles.shape.image.src;
                }
            else console.log("Error pJS - No image.src"), a.tmp.img_error = !0;
        }, a.fn.vendors.draw = function() {
            "image" == a.particles.shape.type ? "svg" == a.tmp.img_type ? a.tmp.count_svg >= a.particles.number.value ? (a.fn.particlesDraw(), a.particles.move.enable ? a.fn.drawAnimFrame = requestAnimFrame(a.fn.vendors.draw) : cancelRequestAnimFrame(a.fn.drawAnimFrame)) : a.tmp.img_error || (a.fn.drawAnimFrame = requestAnimFrame(a.fn.vendors.draw)) : void 0 != a.tmp.img_obj ? (a.fn.particlesDraw(), a.particles.move.enable ? a.fn.drawAnimFrame = requestAnimFrame(a.fn.vendors.draw) : cancelRequestAnimFrame(a.fn.drawAnimFrame)) : a.tmp.img_error || (a.fn.drawAnimFrame = requestAnimFrame(a.fn.vendors.draw)) : (a.fn.particlesDraw(), a.particles.move.enable ? a.fn.drawAnimFrame = requestAnimFrame(a.fn.vendors.draw) : cancelRequestAnimFrame(a.fn.drawAnimFrame));
        }, a.fn.vendors.checkBeforeDraw = function() {
            "image" == a.particles.shape.type ? "svg" == a.tmp.img_type && void 0 == a.tmp.source_svg ? a.tmp.checkAnimFrame = requestAnimFrame(check) : (cancelRequestAnimFrame(a.tmp.checkAnimFrame), a.tmp.img_error || (a.fn.vendors.init(), a.fn.vendors.draw())) : (a.fn.vendors.init(), a.fn.vendors.draw());
        }, a.fn.vendors.init = function() {
            a.fn.retinaInit(), a.fn.canvasInit(), a.fn.canvasSize(), a.fn.canvasPaint(), a.fn.particlesCreate(),
                a.fn.vendors.densityAutoParticles(), a.particles.line_linked.color_rgb_line = hexToRgb(a.particles.line_linked.color);
        }, a.fn.vendors.start = function() {
            isInArray("image", a.particles.shape.type) ? (a.tmp.img_type = a.particles.shape.image.src.substr(a.particles.shape.image.src.length - 3), a.fn.vendors.loadImg(a.tmp.img_type)) : a.fn.vendors.checkBeforeDraw();
        }, a.fn.vendors.eventsListeners(), a.fn.vendors.start();
    };
